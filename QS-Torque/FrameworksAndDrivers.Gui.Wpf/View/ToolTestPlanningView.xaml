<UserControl x:Class="FrameworksAndDrivers.Gui.Wpf.View.ToolTestPlanningView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View"
             xmlns:c="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View.Controls"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:styles="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View.Styles"
             xmlns:wpf="clr-namespace:NGettext.Wpf;assembly=NGettext.Wpf"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:enums="clr-namespace:Core.Enums;assembly=Client.Core"
             xmlns:commonentities="clr-namespace:Core.Entities;assembly=Common.Types"
             xmlns:behaviours="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View.Behaviors"
             xmlns:converter="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="1200" d:DesignWidth="1200">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/ButtonStyles.xaml" />
                <ResourceDictionary Source="Styles/ComboBoxStyles.xaml" />
                <ResourceDictionary Source="Styles/TextBoxStyles.xaml" />
                <ResourceDictionary Source="Styles/TextBlockStyles.xaml" />
                <ResourceDictionary Source="Styles/GroupBoxStyles.xaml" />
                <ResourceDictionary Source="Styles/TabStyles.xaml" />
                <ResourceDictionary Source="Styles/SfDataGridStyles.xaml" />
                <ResourceDictionary Source="Styles/PanelStyles.xaml"/>
                <ResourceDictionary Source="Styles/CalendarStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converter:TestDateToDueIconConverter x:Key="TestDateToDueIconConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <DockPanel>
        <TabControl DockPanel.Dock="Top">
            <!--Start Ribbon for test date overview-->
            <TabItem Header="{wpf:Gettext TestPlanView Ribbon|Start}"
                     styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TabItem}}">
                <styles:DynamicContainerStyle.DerivedStyle>
                    <Style TargetType="{x:Type TabItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=TestOverviewTab, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="IsSelected" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TestOverviewTab, Path=IsSelected}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="IsSelected" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </styles:DynamicContainerStyle.DerivedStyle>

                <TabItem.Content>
                    <StackPanel Height="70"/>
                </TabItem.Content>
            </TabItem>

            <!--Start Ribbon for tool testitng assignment-->
            <TabItem Header="{wpf:Gettext TestPlanView Ribbon|Start}"
                     styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TabItem}}">
                <styles:DynamicContainerStyle.DerivedStyle>
                    <Style TargetType="{x:Type TabItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=TestLevelSetAssignmentTab, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="IsSelected" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TestLevelSetAssignmentTab, Path=IsSelected}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="IsSelected" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </styles:DynamicContainerStyle.DerivedStyle>

                <TabItem.Content>
                    <StackPanel Orientation="Horizontal">
                        <Button MinWidth="70"
                                MaxWidth="85"
                                Height="60"
                                Margin="10,5"
                                VerticalContentAlignment="Top"
                                Command="{Binding AssignTestLevelSetCommand}"
                                Style="{DynamicResource TransparentButtonStyle}">
                            <StackPanel>
                                <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/link.png"
                                              Height="30" 
                                              Margin="0,0,0,2"/>
                                <TextBlock Text="{wpf:Gettext TestPlanView Ribbon|Assign test level set}"
                                           FontSize="10"
                                           TextAlignment="Center" 
                                           TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Button>
                        <Button MinWidth="70"
                                MaxWidth="85"
                                Height="60"
                                Margin="10,5"
                                VerticalContentAlignment="Top"
                                Command="{Binding RemoveTestLevelSetAssignmentsCommand}"
                                Style="{DynamicResource TransparentButtonStyle}">
                            <StackPanel>
                                <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/delete.png"
                                              Height="30" 
                                              Margin="0,0,0,2"/>
                                <TextBlock Text="{wpf:Gettext TestPlanView Ribbon|Remove test level set assignment}"
                                           FontSize="10"
                                           TextAlignment="Center" 
                                           TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Button>
                        <Button MinWidth="70"
                                MaxWidth="85"
                                Height="60"
                                Margin="10,5"
                                VerticalContentAlignment="Top"
                                Command="{Binding ResetTestLevelSetSelectionCommand}"
                                Style="{DynamicResource TransparentButtonStyle}">
                            <StackPanel>
                                <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/reset.png"
                                              Height="30" 
                                              Margin="0,0,0,2"/>
                                <TextBlock Text="{wpf:Gettext TestPlanView Ribbon|Undo test level selection}"
                                           FontSize="10"
                                           TextAlignment="Center" 
                                           TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Button>
                        <Button MinWidth="70"
                                MaxWidth="85"
                                Height="60"
                                Margin="10,5"
                                VerticalContentAlignment="Top"
                                Command="{Binding SaveTestLevelNumbersCommand}"
                                Style="{DynamicResource TransparentButtonStyle}">
                            <StackPanel>
                                <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/save.png"
                                              Height="30" 
                                              Margin="0,0,0,2"/>
                                <TextBlock Text="{wpf:Gettext TestPlanView Ribbon|Save}"
                                           FontSize="10"
                                           TextAlignment="Center" 
                                           TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </TabItem.Content>
            </TabItem>
        </TabControl>

        <TabControl x:Name="MainTabControl"
                    Margin="0,10,0,0">
            <TabItem x:Name="TestOverviewTab"
                     Header="{wpf:Gettext TestPlanView|Next tests overview}"
                     PreviewMouseLeftButtonDown="TestOverviewTab_OnPreviewMouseLeftButtonDown">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0"
                               Margin="10"
                               Text="{wpf:Gettext Test Date Overview|Next MCA Tests}"/>
                    <c:ExtendedSfDataGrid Grid.Row="1" x:Name="NextTestsOverviewDataGridMca"
                                          Margin="10"
                                          FilterPopupStyle="{StaticResource GridFilterStyle}"
                                          AutoGenerateColumns="False"
                                          AllowFiltering="True"
                                          AllowResizingColumns="True"
                                          ColumnSizer="Auto"
                                          AutoExpandGroups="True"
                                          SelectionMode="Single"
                                          ItemsSource="{Binding McaLocationToolAssignmentsForOverview}">
                        <c:ExtendedSfDataGrid.Columns>
                            <syncfusion:GridTemplateColumn AllowSorting="False" AllowFiltering="False" HeaderText="{wpf:Gettext Test Date Overview|Maturity}">
                                <syncfusion:GridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl>
                                            <ContentControl.Style>
                                                <Style TargetType="ContentControl">
                                                    <Style.Triggers>
                                                        <DataTrigger Value="{x:Static converter:DueIcon.RedPast}">
                                                            <DataTrigger.Binding>
                                                                <MultiBinding Converter="{StaticResource TestDateToDueIconConverter}"
                                                                              ConverterParameter="{x:Static enums:TestType.Mfu}">
                                                                    <Binding/>
                                                                    <Binding Path="DataContext.CurrentShiftManagement" RelativeSource="{RelativeSource AncestorType={x:Type UserControl}}"/>
                                                                </MultiBinding>
                                                            </DataTrigger.Binding>
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/past_red.png"
                                                                                  Height="15" 
                                                                                  Margin="1"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Value="{x:Static converter:DueIcon.YellowPresence}">
                                                            <DataTrigger.Binding>
                                                                <MultiBinding Converter="{StaticResource TestDateToDueIconConverter}"
                                                                              ConverterParameter="{x:Static enums:TestType.Mfu}">
                                                                    <Binding/>
                                                                    <Binding Path="DataContext.CurrentShiftManagement" RelativeSource="{RelativeSource AncestorType={x:Type local:ToolTestPlanningView}}"/>
                                                                </MultiBinding>
                                                            </DataTrigger.Binding>
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/clock_yellow.png"
                                                                                  Height="15" 
                                                                                  Margin="1"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Value="{x:Static converter:DueIcon.GreenFuture}">
                                                            <DataTrigger.Binding>
                                                                <MultiBinding Converter="{StaticResource TestDateToDueIconConverter}"
                                                                              ConverterParameter="{x:Static enums:TestType.Mfu}">
                                                                    <Binding/>
                                                                    <Binding Path="DataContext.CurrentShiftManagement" RelativeSource="{RelativeSource AncestorType={x:Type local:ToolTestPlanningView}}"/>
                                                                </MultiBinding>
                                                            </DataTrigger.Binding>
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/future_green.png"
                                                                                  Height="15" 
                                                                                  Margin="1"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ContentControl.Style>
                                        </ContentControl>
                                    </DataTemplate>
                                </syncfusion:GridTemplateColumn.CellTemplate>
                            </syncfusion:GridTemplateColumn>
                            <syncfusion:GridDateTimeColumn HeaderText="{wpf:Gettext Working calendar parameters|Next test date mfu}" MappingName="NextTestDateMfu"
                                                           DateTimeFormat="{Binding Path=DateTimeFormatInfo, Source={x:Static local:LocalizationUtil.Localization}}"/>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext TestLevelSetAssignment|Next test shift mfu}" MappingName="NextTestShiftMfu">
                                <syncfusion:GridTextColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   VerticalAlignment="Center">
                                            <styles:DynamicContainerStyle.DerivedStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Text" Value=""/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding NextTestShiftMfu}" Value="{x:Static enums:Shift.FirstShiftOfDay}">
                                                            <Setter Property="Text" Value="{wpf:Gettext Shift|First shift of day}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding NextTestShiftMfu}" Value="{x:Static enums:Shift.SecondShiftOfDay}">
                                                            <Setter Property="Text" Value="{wpf:Gettext Shift|Second shift of day}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding NextTestShiftMfu}" Value="{x:Static enums:Shift.ThirdShiftOfDay}">
                                                            <Setter Property="Text" Value="{wpf:Gettext Shift|Third shift of day}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </styles:DynamicContainerStyle.DerivedStyle>
                                        </TextBlock>
                                    </DataTemplate>
                                </syncfusion:GridTextColumn.CellTemplate>
                            </syncfusion:GridTextColumn>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext Working calendar parameters|Location number}" MappingName="AssignedLocation.Number"/>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext Working calendar parameters|Location description}" MappingName="AssignedLocation.Description"/>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext Working calendar parameters|Tool serial number}" MappingName="AssignedTool.SerialNumber"/>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext Working calendar parameters|Tool inventory number}" MappingName="AssignedTool.InventoryNumber"/>
                        </c:ExtendedSfDataGrid.Columns>
                    </c:ExtendedSfDataGrid>

                    <TextBlock Grid.Row="2"
                               Margin="10"
                               Text="{wpf:Gettext Test Date Overview|Next CHK Tests}"/>
                    <c:ExtendedSfDataGrid Grid.Row="3"
                                          x:Name="NextTestsOverviewDataGridChk"
                                          Margin="10"
                                          FilterPopupStyle="{StaticResource GridFilterStyle}"
                                          AutoGenerateColumns="False"
                                          AllowFiltering="True"
                                          AllowResizingColumns="True"
                                          ColumnSizer="Auto"
                                          AutoExpandGroups="True"
                                          SelectionMode="Single"
                                          ItemsSource="{Binding ChkLocationToolAssignmentsForOverview}">
                        <c:ExtendedSfDataGrid.Columns>
                            <syncfusion:GridTemplateColumn HeaderText="{wpf:Gettext Test Date Overview|Maturity}" AllowSorting="False" AllowFiltering="False">
                                <syncfusion:GridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl>
                                            <ContentControl.Style>
                                                <Style TargetType="ContentControl">
                                                    <Style.Triggers>
                                                        <DataTrigger Value="{x:Static converter:DueIcon.RedPast}">
                                                            <DataTrigger.Binding>
                                                                <MultiBinding Converter="{StaticResource TestDateToDueIconConverter}"
                                                                              ConverterParameter="{x:Static enums:TestType.Chk}">
                                                                    <Binding/>
                                                                    <Binding Path="DataContext.CurrentShiftManagement" RelativeSource="{RelativeSource AncestorType={x:Type UserControl}}"/>
                                                                </MultiBinding>
                                                            </DataTrigger.Binding>
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/past_red.png"
                                                                                  Height="15" 
                                                                                  Margin="1"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Value="{x:Static converter:DueIcon.YellowPresence}">
                                                            <DataTrigger.Binding>
                                                                <MultiBinding Converter="{StaticResource TestDateToDueIconConverter}"
                                                                              ConverterParameter="{x:Static enums:TestType.Chk}">
                                                                    <Binding/>
                                                                    <Binding Path="DataContext.CurrentShiftManagement" RelativeSource="{RelativeSource AncestorType={x:Type local:ToolTestPlanningView}}"/>
                                                                </MultiBinding>
                                                            </DataTrigger.Binding>
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/clock_yellow.png"
                                                                                  Height="15" 
                                                                                  Margin="1"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Value="{x:Static converter:DueIcon.GreenFuture}">
                                                            <DataTrigger.Binding>
                                                                <MultiBinding Converter="{StaticResource TestDateToDueIconConverter}"
                                                                              ConverterParameter="{x:Static enums:TestType.Chk}">
                                                                    <Binding/>
                                                                    <Binding Path="DataContext.CurrentShiftManagement" RelativeSource="{RelativeSource AncestorType={x:Type local:ToolTestPlanningView}}"/>
                                                                </MultiBinding>
                                                            </DataTrigger.Binding>
                                                            <Setter Property="Content">
                                                                <Setter.Value>
                                                                    <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/future_green.png"
                                                                                  Height="15" 
                                                                                  Margin="1"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ContentControl.Style>
                                        </ContentControl>
                                    </DataTemplate>
                                </syncfusion:GridTemplateColumn.CellTemplate>
                            </syncfusion:GridTemplateColumn>
                            <syncfusion:GridDateTimeColumn HeaderText="{wpf:Gettext Working calendar parameters|Next test date chk}" MappingName="NextTestDateChk"
                                                           DateTimeFormat="{Binding Path=DateTimeFormatInfo, Source={x:Static local:LocalizationUtil.Localization}}"/>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext TestLevelSetAssignment|Next test shift chk}" MappingName="NextTestShiftChk">
                                <syncfusion:GridTextColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   VerticalAlignment="Center">
                                            <styles:DynamicContainerStyle.DerivedStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Text" Value=""/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding NextTestShiftChk}" Value="{x:Static enums:Shift.FirstShiftOfDay}">
                                                            <Setter Property="Text" Value="{wpf:Gettext Shift|First shift of day}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding NextTestShiftChk}" Value="{x:Static enums:Shift.SecondShiftOfDay}">
                                                            <Setter Property="Text" Value="{wpf:Gettext Shift|Second shift of day}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding NextTestShiftChk}" Value="{x:Static enums:Shift.ThirdShiftOfDay}">
                                                            <Setter Property="Text" Value="{wpf:Gettext Shift|Third shift of day}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </styles:DynamicContainerStyle.DerivedStyle>
                                        </TextBlock>
                                    </DataTemplate>
                                </syncfusion:GridTextColumn.CellTemplate>
                            </syncfusion:GridTextColumn>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext Working calendar parameters|Location number}" MappingName="AssignedLocation.Number"/>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext Working calendar parameters|Location description}" MappingName="AssignedLocation.Description"/>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext Working calendar parameters|Tool serial number}" MappingName="AssignedTool.SerialNumber"/>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext Working calendar parameters|Tool inventory number}" MappingName="AssignedTool.InventoryNumber"/>
                        </c:ExtendedSfDataGrid.Columns>
                    </c:ExtendedSfDataGrid>
                </Grid>
            </TabItem>

            <TabItem x:Name="TestLevelSetAssignmentTab"
                     Header="{wpf:Gettext TestPlanView|Test plan assignment}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <c:ExtendedSfDataGrid x:Name="LocationToolAssignmentDataGrid"
                                          Grid.Column="0"
                                          Margin="10"
                                          FilterPopupStyle="{StaticResource GridFilterStyle}"
                                          AutoGenerateColumns="False"
                                          AllowFiltering="True"
                                          AllowResizingColumns="True"
                                          ColumnSizer="Auto"
                                          AutoExpandGroups="True"
                                          SelectionMode="Extended"
                                          ItemsSource="{Binding LocationToolAssignmentsForTestLevelAssignment}"
                                          SelectionChanged="LocationToolAssignmentDataGrid_OnSelectionChanged">
                        <c:ExtendedSfDataGrid.Columns>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext TestLevelSetAssignment|Test Type}" MappingName="TestType">
                                <syncfusion:GridTextColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}">
                                            <styles:DynamicContainerStyle.DerivedStyle>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding TestType}" Value="{x:Static enums:TestType.Mfu}">
                                                            <Setter Property="Text" Value="{wpf:Gettext TestType|MFU}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding TestType}" Value="{x:Static enums:TestType.Chk}">
                                                            <Setter Property="Text" Value="{wpf:Gettext TestType|CHK}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </styles:DynamicContainerStyle.DerivedStyle>
                                        </TextBlock>
                                    </DataTemplate>
                                </syncfusion:GridTextColumn.CellTemplate>
                            </syncfusion:GridTextColumn>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext TestLevelSetAssignment|Location number}" MappingName="AssignedLocation.Number"/>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext TestLevelSetAssignment|Location description}" MappingName="AssignedLocation.Description"/>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext TestLevelSetAssignment|Tool serial number}" MappingName="AssignedTool.SerialNumber"/>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext TestLevelSetAssignment|Tool inventory number}" MappingName="AssignedTool.InventoryNumber"/>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext TestLevelSetAssignment|Current test level set}" MappingName="TestLevelSetForTestType.Name"/>
                            <syncfusion:GridTemplateColumn HeaderText="{wpf:Gettext TestLevelSetAssignment|Test level number}" AllowSorting="False" AllowFiltering="False">
                                <syncfusion:GridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <local:TestLevelNumberComboBox DropDownOpened="TestLevelNumberComboBox_OnDropDownOpened"
                                                                       SelectionChanged="TestLevelNumberComboBox_OnSelectionChanged"
                                                                       Loaded="TestLevelNumberComboBox_OnLoaded"
                                                                       DataContextChanged="TestLevelNumberComboBox_OnDataContextChanged"
                                                                       SelectedItem="{Binding TestLevelNumberForTestType}"
                                                                       Style="{DynamicResource {x:Type ComboBox}}">
                                            <i:Interaction.Behaviors>
                                                <behaviours:ShowTableComboBoxChangedBehaviour CompareFunction="{Binding Path=DataContext.CompareIfTestLevelNumberHasChanged, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                                                              CompareQstId="{Binding Id}"
                                                                                              CompareParameter="{Binding TestType}"/>
                                            </i:Interaction.Behaviors>
                                        </local:TestLevelNumberComboBox>
                                    </DataTemplate>
                                </syncfusion:GridTemplateColumn.CellTemplate>
                            </syncfusion:GridTemplateColumn>
                        </c:ExtendedSfDataGrid.Columns>
                    </c:ExtendedSfDataGrid>

                    <GridSplitter Grid.Column="1"
                                  Width="2"
                                  HorizontalAlignment="Stretch"
                                  Margin="10"
                                  Background="{DynamicResource GridSplitterBackground}" />

                    <c:ExtendedSfDataGrid x:Name="TestLevelSetDataGrid"
                                          Grid.Column="2"
                                          Margin="10"
                                          FilterPopupStyle="{StaticResource GridFilterStyle}"
                                          AutoGenerateColumns="False"
                                          AllowFiltering="True"
                                          AllowResizingColumns="True"
                                          ColumnSizer="Auto"
                                          AutoExpandGroups="True"
                                          SelectionMode="Single"
                                          ItemsSource="{Binding TestLevelSets}"
                                          SelectedItem="{Binding SelectedTestLevelSet}">
                        <c:ExtendedSfDataGrid.Columns>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext TestLevelSetAssignment|Test level set}" MappingName="Name"/>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext TestLevelSetAssignment|Interval value 1}" MappingName="IntervalValue1"/>
                            <syncfusion:GridTextColumn HeaderText="{wpf:Gettext TestLevelSetAssignment|Interval Type 1}" MappingName="IntervalType1">
                                <syncfusion:GridTextColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}">
                                            <styles:DynamicContainerStyle.DerivedStyle>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IntervalType1}" Value="{x:Static commonentities:IntervalType.EveryXShifts}">
                                                            <Setter Property="Text" Value="{wpf:Gettext IntervalType|Every x shifts}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IntervalType1}" Value="{x:Static commonentities:IntervalType.EveryXDays}">
                                                            <Setter Property="Text" Value="{wpf:Gettext IntervalType|Every x days}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IntervalType1}" Value="{x:Static commonentities:IntervalType.XTimesAShift}">
                                                            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a shift}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IntervalType1}" Value="{x:Static commonentities:IntervalType.XTimesADay}">
                                                            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a day}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IntervalType1}" Value="{x:Static commonentities:IntervalType.XTimesAWeek}">
                                                            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a week}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IntervalType1}" Value="{x:Static commonentities:IntervalType.XTimesAMonth}">
                                                            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a month}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IntervalType1}" Value="{x:Static commonentities:IntervalType.XTimesAYear}">
                                                            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a year}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </styles:DynamicContainerStyle.DerivedStyle>
                                        </TextBlock>
                                    </DataTemplate>
                                </syncfusion:GridTextColumn.CellTemplate>
                            </syncfusion:GridTextColumn>
                        </c:ExtendedSfDataGrid.Columns>
                    </c:ExtendedSfDataGrid>
                </Grid>
            </TabItem>
        </TabControl>
    </DockPanel>
</UserControl>
