<Window x:Class="FrameworksAndDrivers.Gui.Wpf.View.AssistentView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View"
        xmlns:wpf="clr-namespace:NGettext.Wpf;assembly=NGettext.Wpf"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:converter="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View.Converter"
        xmlns:styles="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View.Styles"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:behaviors="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View.Behaviors"
        xmlns:entities="clr-namespace:Core.Entities;assembly=Client.Core"
        xmlns:commonentities="clr-namespace:Core.Entities;assembly=Common.Types"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:view="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="QS-Torque" Height="450" Width="800"
        MinHeight="400" MinWidth="700"
        AutomationProperties.AutomationId="AI_AssistentView">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles\ButtonStyles.xaml"/>
                <ResourceDictionary Source="Styles\TextBoxStyles.xaml"/>
                <ResourceDictionary Source="Styles\TextBlockStyles.xaml"/>
                <ResourceDictionary Source="Styles\ListStyles.xaml"/>
                <ResourceDictionary Source="Styles\ComboBoxStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="AssistentInputControlStyle" TargetType="FrameworkElement">
                <EventSetter Event="Loaded" Handler="InputControl_Loaded"/>
                <EventSetter Event="PreviewKeyDown" Handler="InputControl_KeyDown"/>
            </Style>
            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="AutomationProperties.AutomationId" Value="{Binding DisplayMember, Mode=OneWay}"/>
            </Style>

            <converter:IsNotEqualConverter x:Key="IsNotEqualConverter"/>
            <converter:IntervalToStringConverter x:Key="IntervalToStringConverter"/>
            <view:AssistantValueListConverter x:Key="AssistantValueListConverter"/>
        </ResourceDictionary>
    </Window.Resources>

    <DockPanel>
        <TextBlock DockPanel.Dock="Top"
                   Margin="10"
                   FontSize="15"
                   Text="{Binding Description}"/>

        <StackPanel DockPanel.Dock="Bottom" 
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Margin="10">
            <Button Content="{wpf:Gettext Cancel}"
                    Style="{DynamicResource ButtonStyle}"
                    Width="100"
                    Height="23"
                    Click="ButtonCancle_Click"
                    AutomationProperties.AutomationId="AI_AssistentView_Cancel"/>
            <Button Content="{wpf:Gettext Assistent|Previous}"
                    Style="{DynamicResource ButtonStyle}"
                    Width="100"
                    Height="23"
                    Margin="10,0"
                    Command="{Binding PreviousCommand}"
                    AutomationProperties.AutomationId="AI_AssistentView_Previous"/>
            <Button Width="100"
                    Height="23"
                    Command="{Binding NextCommand}"
                    styles:DynamicContainerStyle.BaseStyle="{DynamicResource ButtonStyle}"
                    AutomationProperties.AutomationId="AI_AssistentView_Next">
                <styles:DynamicContainerStyle.DerivedStyle>
                    <Style TargetType="Button">
                        <Setter Property="Content" Value="{wpf:Gettext Assistent|Next}"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsLastAssistentItem}" Value="True">
                                <Setter Property="Content" Value="{wpf:Gettext Assistent|Apply}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </styles:DynamicContainerStyle.DerivedStyle>
            </Button>
        </StackPanel>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="2*" MinWidth="150"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <ListView Grid.Column="0"
                      Margin="10"
                      SelectionMode="Single"
                      ItemsSource="{Binding AssistentItemCollectionView}"
                      SelectedItem="{Binding SelectedAssistentItem}"
                      AutomationProperties.AutomationId="AI_AssistentView_NavigationList"
                      VirtualizingStackPanel.IsVirtualizing="False">
                <i:Interaction.Behaviors>
                    <behaviors:EventToCommandBehavior Event="SelectionChanged"
                                                      Command="{Binding SelectedAssistentItemChangedCommand}"
                                                      PassArguments="True"/>
                </i:Interaction.Behaviors>


                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="{wpf:Gettext Field}" Width="Auto">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding AttributName}"
                                               styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}">
                                        <styles:DynamicContainerStyle.DerivedStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="FontWeight" Value="Normal"/>

                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding AlreadySelected}" Value="True">
                                                        <Setter Property="Opacity" Value="1"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding AlreadySelected}" Value="False">
                                                        <Setter Property="Opacity" Value="0.5"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Type}" Value="ChapterHeading">
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </styles:DynamicContainerStyle.DerivedStyle>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn x:Name="AssistentItemValueColumn"
                                        Header="{wpf:Gettext Value}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                               SizeChanged="TextBlockAssistentValue_SizeChanged">
                                        <Run Text="{Binding EnteredValue, Converter={StaticResource AssistantValueListConverter}}"/>
                                        <Run Text="{Binding Unit}"/>
                                        
                                        <styles:DynamicContainerStyle.DerivedStyle>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding AlreadySelected}" Value="True">
                                                        <Setter Property="Opacity" Value="1"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding AlreadySelected}" Value="False">
                                                        <Setter Property="Opacity" Value="0.5"/>
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding Unit}" Value="{x:Null}">
                                                        <Setter Property="Text" Value="{Binding EnteredValue, Converter={StaticResource AssistantValueListConverter}}"/>
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding Path=EnteredDisplayMemberModel, Converter={StaticResource IsNotEqualConverter}, ConverterParameter={x:Null}, FallbackValue=False}"
                                                                 Value="True">
                                                        <Setter Property="Text" Value="{Binding EnteredDisplayMemberModel.DisplayMember}"/>
                                                    </DataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Type}" Value="Boolean"/>
                                                            <Condition Binding="{Binding EnteredValue}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Text" Value="{wpf:Gettext Yes}"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Type}" Value="Boolean"/>
                                                            <Condition Binding="{Binding EnteredValue}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Text" Value="{wpf:Gettext No}"/>
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Type}" Value="Interval"/>
                                                            <Condition Binding="{Binding EnteredValue.Type}" Value="{x:Static commonentities:IntervalType.EveryXShifts}"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Text" Value="{Binding Path=EnteredValue, Converter={StaticResource IntervalToStringConverter}, ConverterParameter={wpf:Gettext IntervalType|Every x shifts}}"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Type}" Value="Interval"/>
                                                            <Condition Binding="{Binding EnteredValue.Type}" Value="{x:Static commonentities:IntervalType.EveryXDays}"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Text" Value="{Binding Path=EnteredValue, Converter={StaticResource IntervalToStringConverter}, ConverterParameter={wpf:Gettext IntervalType|Every x days}}"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Type}" Value="Interval"/>
                                                            <Condition Binding="{Binding EnteredValue.Type}" Value="{x:Static commonentities:IntervalType.XTimesAShift}"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Text" Value="{Binding Path=EnteredValue, Converter={StaticResource IntervalToStringConverter}, ConverterParameter={wpf:Gettext IntervalType|X times a shift}}"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Type}" Value="Interval"/>
                                                            <Condition Binding="{Binding EnteredValue.Type}" Value="{x:Static commonentities:IntervalType.XTimesADay}"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Text" Value="{Binding Path=EnteredValue, Converter={StaticResource IntervalToStringConverter}, ConverterParameter={wpf:Gettext IntervalType|X times a day}}"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Type}" Value="Interval"/>
                                                            <Condition Binding="{Binding EnteredValue.Type}" Value="{x:Static commonentities:IntervalType.XTimesAWeek}"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Text" Value="{Binding Path=EnteredValue, Converter={StaticResource IntervalToStringConverter}, ConverterParameter={wpf:Gettext IntervalType|X times a week}}"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Type}" Value="Interval"/>
                                                            <Condition Binding="{Binding EnteredValue.Type}" Value="{x:Static commonentities:IntervalType.XTimesAMonth}"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Text" Value="{Binding Path=EnteredValue, Converter={StaticResource IntervalToStringConverter}, ConverterParameter={wpf:Gettext IntervalType|X times a month}}"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Type}" Value="Interval"/>
                                                            <Condition Binding="{Binding EnteredValue.Type}" Value="{x:Static commonentities:IntervalType.XTimesAYear}"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Text" Value="{Binding Path=EnteredValue, Converter={StaticResource IntervalToStringConverter}, ConverterParameter={wpf:Gettext IntervalType|X times a year}}"/>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </styles:DynamicContainerStyle.DerivedStyle>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>

            <GridSplitter Grid.Column="1"
                          Width="2"
                          Margin="0,10"
                          HorizontalAlignment="Stretch"
                          Background="{DynamicResource GridSplitterBackground}"/>

            <StackPanel Grid.Column="2"
                        Margin="10"
                        DataContext="{Binding Path=SelectedAssistentItem}">
                <TextBlock Text="{Binding Description}"/>

                <ContentControl Margin="0,10">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Type}" Value="{x:Null}">
                                    <Setter Property="Content" Value="{x:Null}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="ChapterHeading">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel>
                                                <TextBlock Text="{Binding AttributName}"
                                                           FontSize="20"
                                                           FontWeight="Bold"
                                                           Margin="15,0,0,0"/>
                                                <TextBlock Text="{Binding Hint}"
                                                           FontSize="12"
                                                           Margin="0,15,15,15"
                                                           TextWrapping="Wrap"/>
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="Numeric">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <syncfusion:IntegerTextBox Width="150"
                                                                               Value="{Binding EnteredValue, UpdateSourceTrigger=PropertyChanged}"
                                                                               MinValue="0"
                                                                               styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type syncfusion:IntegerTextBox}}"
                                                                               styles:DynamicContainerStyle.DerivedStyle="{DynamicResource AssistentInputControlStyle}"
                                                                               AutomationProperties.AutomationId="AI_AssistentView_InputInteger">
                                                        <i:Interaction.Behaviors>
                                                            <behaviors:BehaviorBinding Behaviors="{Binding Behaviors}"/>
                                                        </i:Interaction.Behaviors>
                                                    </syncfusion:IntegerTextBox>
                                                    <TextBlock Text="{Binding Unit}"
                                                               Margin="10,0,0,0"/>
                                                </StackPanel>

                                                <TextBlock Text="{Binding Hint}"
                                                           FontSize="12"
                                                           Margin="0,15,15,15"
                                                           TextWrapping="Wrap"/>
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="FloatingPoint">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <syncfusion:DoubleTextBox NumberDecimalDigits="3"
                                                                              Width="150"
                                                                              MinValue="0"
                                                                              Value="{Binding EnteredValue, UpdateSourceTrigger=PropertyChanged}"
                                                                              styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type syncfusion:DoubleTextBox}}"
                                                                              styles:DynamicContainerStyle.DerivedStyle="{DynamicResource AssistentInputControlStyle}"
                                                                              AutomationProperties.AutomationId="AI_AssistentView_InputFloatingPoint">
                                                        <i:Interaction.Behaviors>
                                                            <behaviors:BehaviorBinding Behaviors="{Binding Behaviors}"/>
                                                        </i:Interaction.Behaviors>
                                                    </syncfusion:DoubleTextBox>
                                                    <TextBlock Text="{Binding Unit}"
                                                               Margin="10,0,0,0"/>
                                                </StackPanel>

                                                <TextBlock Text="{Binding Hint}"
                                                           FontSize="12"
                                                           Margin="0,15,15,15"
                                                           TextWrapping="Wrap"/>
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="Text">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <TextBox Grid.Column="0"
                                                         Grid.Row="0"
                                                         Text="{Binding EnteredValue, UpdateSourceTrigger=PropertyChanged}"
                                                         MaxLength="{Binding MaxLengthText}"
                                                         styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBox}}"
                                                         styles:DynamicContainerStyle.DerivedStyle="{DynamicResource AssistentInputControlStyle}"
                                                         AutomationProperties.AutomationId="AI_AssistentView_InputText">
                                                    <i:Interaction.Behaviors>
                                                        <behaviors:BehaviorBinding Behaviors="{Binding Behaviors}"/>
                                                    </i:Interaction.Behaviors>
                                                </TextBox>
                                                <TextBlock Grid.Column="1"
                                                           Grid.Row="0"
                                                           Text="{Binding Unit}"
                                                           Margin="10,0,0,0"/>
                                                <TextBlock Grid.Column="0"
                                                           Grid.Row="1"
                                                           Grid.ColumnSpan="2"
                                                           Text="{Binding Hint}"
                                                           FontSize="12"
                                                           Margin="0,15,15,15"
                                                           TextWrapping="Wrap"/>
                                            </Grid>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="Boolean">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel>
                                                <CheckBox IsChecked="{Binding EnteredValue}"
                                                          HorizontalAlignment="Left"
                                                          styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type CheckBox}}"
                                                          styles:DynamicContainerStyle.DerivedStyle="{DynamicResource AssistentInputControlStyle}"
                                                          AutomationProperties.AutomationId="AI_AssistentView_InputBoolean"/>

                                                <TextBlock Text="{Binding Hint}"
                                                           FontSize="12"
                                                           Margin="0,15,15,0"
                                                           TextWrapping="Wrap"/>
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="Date">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel>
                                                <syncfusion:DateTimeEdit Pattern="LongDate"
                                                                         DateTime="{Binding EnteredValue}"
                                                                         styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type syncfusion:DateTimeEdit}}"
                                                                         styles:DynamicContainerStyle.DerivedStyle="{DynamicResource AssistentInputControlStyle}"
                                                                         MinDateTime="{Binding MinimumDate}"
                                                                         AutomationProperties.AutomationId="AI_AssistentView_InputDate"/>

                                                <TextBlock Text="{Binding Hint}"
                                                           FontSize="12"
                                                           Margin="0,15,15,0"
                                                           TextWrapping="Wrap"/>
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="List">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <ListBox Height="185"
                                                     ItemsSource="{Binding ItemsCollectionView}"
                                                     SelectedItem="{Binding EnteredDisplayMemberModel}"
                                                     DisplayMemberPath="DisplayMember"
                                                     styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type ListBox}}"
                                                     styles:DynamicContainerStyle.DerivedStyle="{DynamicResource AssistentInputControlStyle}"
                                                     AutomationProperties.AutomationId="AI_AssistentView_InputList"
                                                     ScrollViewer.CanContentScroll="False"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

                <ContentControl Margin="0,10"
                                HorizontalAlignment="Left">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HelperTableButtonText, FallbackValue={x:Null}}" Value="{x:Null}">
                                    <Setter Property="Content" Value="{x:Null}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding HelperTableButtonText, Converter={StaticResource IsNotEqualConverter}, ConverterParameter={x:Null}, FallbackValue=False}"
                                             Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Button Content="{Binding HelperTableButtonText}"
                                                    Style="{DynamicResource ButtonStyle}"
                                                    Command="{Binding OpenHelperTableCommand}"
                                                    Height="23"
                                                    Padding="5,0"
                                                    AutomationProperties.AutomationId="AI_AssistentView_JumpHelperTable"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="Interval">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <TextBox Grid.Column="0"
                                                         Grid.Row="0"
                                                         Width="200"
                                                         Text="{Binding EnteredValue.IntervalValue, UpdateSourceTrigger=PropertyChanged}"
                                                         MaxLength="{Binding MaxLengthText}"
                                                         styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBox}}"
                                                         styles:DynamicContainerStyle.DerivedStyle="{DynamicResource AssistentInputControlStyle}"
                                                         AutomationProperties.AutomationId="AI_AssistentView_InputText">
                                                    <i:Interaction.Behaviors>
                                                        <behaviors:BehaviorBinding Behaviors="{Binding Behaviors}"/>
                                                    </i:Interaction.Behaviors>
                                                </TextBox>
                                                <TextBlock Grid.Column="1"
                                                           Grid.Row="0"
                                                           Text="{Binding Unit}"
                                                           Margin="10,0,0,0"/>
                                                <ComboBox Grid.Column="0"
                                                          Grid.Row="1"
                                                          Width="200"
                                                          HorizontalAlignment="Left"
                                                          Margin="0,10"
                                                          SelectedItem="{Binding EnteredValue.Type}">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}">
                                                                <styles:DynamicContainerStyle.DerivedStyle>
                                                                    <Style TargetType="TextBlock">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.EveryXShifts}">
                                                                                <Setter Property="Text" Value="{wpf:Gettext IntervalType|Every x shifts}"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.EveryXDays}">
                                                                                <Setter Property="Text" Value="{wpf:Gettext IntervalType|Every x days}"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAShift}">
                                                                                <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a shift}"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesADay}">
                                                                                <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a day}"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAWeek}">
                                                                                <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a week}"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAMonth}">
                                                                                <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a month}"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAYear}">
                                                                                <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a year}"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </styles:DynamicContainerStyle.DerivedStyle>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                    <commonentities:IntervalType>EveryXShifts</commonentities:IntervalType>
                                                    <commonentities:IntervalType>EveryXDays</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAShift</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesADay</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAWeek</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAMonth</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAYear</commonentities:IntervalType>
                                                </ComboBox>
                                                <TextBlock Grid.Column="0"
                                                           Grid.Row="2"
                                                           Grid.ColumnSpan="2"
                                                           Text="{Binding Hint}"
                                                           FontSize="12"
                                                           Margin="0,15,15,15"
                                                           TextWrapping="Wrap"/>
                                            </Grid>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </StackPanel>
        </Grid>
    </DockPanel>
</Window>
