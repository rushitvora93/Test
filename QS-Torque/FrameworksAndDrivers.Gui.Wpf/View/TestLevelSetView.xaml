<UserControl x:Class="FrameworksAndDrivers.Gui.Wpf.View.TestLevelSetView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View"
             xmlns:c="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View.Controls"
             xmlns:wpf="clr-namespace:NGettext.Wpf;assembly=NGettext.Wpf"
             xmlns:styles="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View.Styles"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:entities="clr-namespace:Core.Entities;assembly=Client.Core"
             xmlns:commonentities="clr-namespace:Core.Entities;assembly=Common.Types"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:behaviors="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View.Behaviors"
             xmlns:converter="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="1200" d:DesignWidth="1200"
             AutomationProperties.AutomationId="AI_TestLevelSetView">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/ButtonStyles.xaml" />
                <ResourceDictionary Source="Styles/ComboBoxStyles.xaml" />
                <ResourceDictionary Source="Styles/TextBoxStyles.xaml" />
                <ResourceDictionary Source="Styles/TextBlockStyles.xaml" />
                <ResourceDictionary Source="Styles/GroupBoxStyles.xaml" />
                <ResourceDictionary Source="Styles/TabStyles.xaml" />
                <ResourceDictionary Source="Styles/SfDataGridStyles.xaml" />
                <ResourceDictionary Source="Styles/PanelStyles.xaml"/>
                <ResourceDictionary Source="Styles/CalendarStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <converter:ShortDateConverter x:Key="ShortDateConverter"/>
            <Style TargetType="syncfusion:VirtualizingCellsControl" x:Key="customRowStyleAnnuallyDG">
                <Setter Property="AutomationProperties.AutomationId">
                    <Setter.Value>
                        <MultiBinding StringFormat="AI_TLSView_WorkingCalendarTab_AnnuallyDG_Row:{0}">
                            <Binding Path="Date" Converter="{StaticResource ShortDateConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="syncfusion:GridHeaderCellControl" x:Key="customHeaderStyleAnnuallyDG">
                <Setter Property="AutomationProperties.AutomationId" Value="AI_TLSView_WorkingCalendarTab_AnnuallyDG_HeaderRow"/>
            </Style>
            <Style TargetType="syncfusion:VirtualizingCellsControl" x:Key="customRowStyleSingleEntryDG">
                <Setter Property="AutomationProperties.AutomationId">
                    <Setter.Value>
                        <MultiBinding StringFormat="AI_TLSView_WorkingCalendarTab_SingleEntryDG_Row:{0}">
                            <Binding Path="Date" Converter="{StaticResource ShortDateConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="syncfusion:GridHeaderCellControl" x:Key="customHeaderStyleSingleEntryDG">
                <Setter Property="AutomationProperties.AutomationId" Value="AI_TLSView_WorkingCalendarTab_SingleEntryDG_HeaderRow"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>


    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>


    <DockPanel>
        <TabControl DockPanel.Dock="Top">
            <!--Start Ribbon for test level configuration-->
            <TabItem Header="{wpf:Gettext TestLevelSetView Ribbon|Start}"
                     styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TabItem}}">
                <styles:DynamicContainerStyle.DerivedStyle>
                    <Style TargetType="{x:Type TabItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=TestLevelSetTab, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="IsSelected" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TestLevelSetTab, Path=IsSelected}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="IsSelected" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </styles:DynamicContainerStyle.DerivedStyle>

                <TabItem.Content>
                    <StackPanel Orientation="Horizontal">
                        <Button MinWidth="70"
                                MaxWidth="85"
                                Height="60"
                                Margin="10,5"
                                VerticalContentAlignment="Top"
                                Command="{Binding AddTestLevelSetCommand}"
                                Style="{DynamicResource TransparentButtonStyle}"
                                AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_Add">
                            <StackPanel>
                                <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/add.png"
                                              Height="30" 
                                              Margin="0,0,0,2"/>
                                <TextBlock Text="{wpf:Gettext TestLevelSetView Ribbon|Add}"
                                           FontSize="10"
                                           TextAlignment="Center" 
                                           TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Button>
                        <Button MinWidth="70"
                                MaxWidth="85"
                                Height="60"
                                Margin="10,5"
                                VerticalContentAlignment="Top"
                                Command="{Binding RemoveTestLevelSetCommand}"
                                Style="{DynamicResource TransparentButtonStyle}"
                                AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_Delete">
                            <StackPanel>
                                <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/delete.png"
                                              Height="30" 
                                              Margin="0,0,0,2"/>
                                <TextBlock Text="{wpf:Gettext TestLevelSetView Ribbon|Delete}"
                                           FontSize="10"
                                           TextAlignment="Center" 
                                           TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Button>
                        <Button MinWidth="70"
                                MaxWidth="85"
                                Height="60"
                                Margin="10,5"
                                VerticalContentAlignment="Top"
                                Command="{Binding SaveTestLevelSetCommand}"
                                Style="{DynamicResource TransparentButtonStyle}"
                                AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_Save">
                            <StackPanel>
                                <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/save.png"
                                              Height="30" 
                                              Margin="0,0,0,2"/>
                                <TextBlock Text="{wpf:Gettext TestLevelSetView Ribbon|Save}"
                                           FontSize="10"
                                           TextAlignment="Center" 
                                           TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </TabItem.Content>
            </TabItem>
         
            <!--Start Ribbon for working calendar-->
            <TabItem Header="{wpf:Gettext TestLevelSetView Ribbon|Start}"
                     styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TabItem}}">
                <styles:DynamicContainerStyle.DerivedStyle>
                    <Style TargetType="{x:Type TabItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=WorkingCalendarTab, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="IsSelected" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=WorkingCalendarTab, Path=IsSelected}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="IsSelected" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </styles:DynamicContainerStyle.DerivedStyle>
                
                <TabItem.Content>
                    <StackPanel Orientation="Horizontal">
                        <Button MinWidth="70"
                                MaxWidth="85"
                                Height="60"
                                Margin="10,5"
                                VerticalContentAlignment="Top"
                                Style="{DynamicResource TransparentButtonStyle}"
                                Command="{Binding AddWorkingCalendarEntryCommand}"
                                AutomationProperties.AutomationId="AI_TLSView_WorkingCalendarTab_AddCalendarEntry">
                            <StackPanel>
                                <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/add.png"
                                              Height="30" 
                                              Margin="0,0,0,2"/>
                                <TextBlock Text="{wpf:Gettext TestLevelSetView Ribbon|Add calendar entry}"
                                           FontSize="10"
                                           TextAlignment="Center" 
                                           TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Button>
                        <Button MinWidth="70"
                                MaxWidth="85"
                                Height="60"
                                Margin="10,5"
                                VerticalContentAlignment="Top"
                                Style="{DynamicResource TransparentButtonStyle}"
                                Command="{Binding RemoveWorkingCalendarEntryCommand}"
                                AutomationProperties.AutomationId="AI_TLSView_WorkingCalendarTab_RemoveEntry">
                            <StackPanel>
                                <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/delete.png"
                                              Height="30" 
                                              Margin="0,0,0,2"/>
                                <TextBlock Text="{wpf:Gettext TestLevelSetView Ribbon|Remove entry}"
                                           FontSize="10"
                                           TextAlignment="Center" 
                                           TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </TabItem.Content>
            </TabItem>

            <!--Start Ribbon for shift management-->
            <TabItem Header="{wpf:Gettext TestLevelSetView Ribbon|Start}"
                     styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TabItem}}">
                <styles:DynamicContainerStyle.DerivedStyle>
                    <Style TargetType="{x:Type TabItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=ShiftManagementTab, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="IsSelected" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=ShiftManagementTab, Path=IsSelected}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="IsSelected" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </styles:DynamicContainerStyle.DerivedStyle>

                <TabItem.Content>
                    <StackPanel Orientation="Horizontal">
                        <Button MinWidth="70"
                                MaxWidth="85"
                                Height="60"
                                Margin="10,5"
                                VerticalContentAlignment="Top"
                                Style="{DynamicResource TransparentButtonStyle}"
                                Command="{Binding SaveShiftManagementCommand}"
                                AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_Save">
                            <StackPanel>
                                <c:ThemeImage Source="pack://application:,,,/Resources;component/Icons/save.png"
                                              Height="30" 
                                              Margin="0,0,0,2"/>
                                <TextBlock Text="{wpf:Gettext TestLevelSetView Ribbon|Save}"
                                           FontSize="10"
                                           TextAlignment="Center" 
                                           TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </TabItem.Content>
            </TabItem>
        </TabControl>

        <TabControl Margin="0,10,0,0">
            <TabItem x:Name="TestLevelSetTab"
                     Header="{wpf:Gettext TestLevelSetView|Test level sets}"
                     PreviewMouseLeftButtonDown="TestLevelSetTab_OnPreviewMouseLeftButtonDown"
                     PreviewKeyDown="TabItem_OnPreviewKeyDown"
                     AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab">
                <TabItem.Content>
                    <DockPanel>
                        <ListBox DockPanel.Dock="Left"
                                 Width="250"
                                 Margin="10"
                                 ItemsSource="{Binding TestLevelSets}"
                                 SelectedItem="{Binding SelectedTestLevelSet}"
                                 SelectionMode="Single"
                                 AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_ListBox">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}"
                                               Margin="0,2" 
                                               AutomationProperties.AutomationId="{Binding Name, Mode=OneWay}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

                        <ScrollViewer>
                            <DockPanel>
                                <TextBox DockPanel.Dock="Top"
							             Margin="10"
							             Width="400"
                                         MaxLength="200"
							             HorizontalAlignment="Left"
							             Text="{Binding SelectedTestLevelSet.Name, UpdateSourceTrigger=PropertyChanged}"
                                         styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBox}}"
                                         AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_Name">
                                    <styles:DynamicContainerStyle.DerivedStyle>
                                        <Style TargetType="TextBox">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedTestLevelSet}" Value="{x:Null}">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </styles:DynamicContainerStyle.DerivedStyle>
                                    <i:Interaction.Behaviors>
                                        <behaviors:ShowChangedFromComparisonTextBoxBehavior CompareTo="{Binding TestLevelSetWithoutChanges.Name}"/>
                                    </i:Interaction.Behaviors>
                                </TextBox>

                                <WrapPanel styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type WrapPanel}}">
                                    <styles:DynamicContainerStyle.DerivedStyle>
                                        <Style TargetType="WrapPanel">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedTestLevelSet}" Value="{x:Null}">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </styles:DynamicContainerStyle.DerivedStyle>

                                    <GroupBox Margin="10"
								              Header="{wpf:Gettext TestLevelsView|Test level 1}"
								              Style="{DynamicResource EqualSizedGroupBoxStyle}">
                                        <Grid MinWidth="400"
								              Margin="0,10">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="35"/>
                                                <RowDefinition Height="35"/>
                                                <RowDefinition Height="35"/>
                                            </Grid.RowDefinitions>

                                            <TextBlock Grid.Column="0"
										               Grid.Row="0"
										               HorizontalAlignment="Right"
										               VerticalAlignment="Center"
										               Margin="10,0,30,0"
										               Text="{wpf:Gettext TestLevelSet parameters|Interval}"/>
                                            <StackPanel Grid.Column="1"
											            Grid.Row="0"
											            Orientation="Horizontal">
                                                <syncfusion:UpDown ZeroColor="{DynamicResource ForegroundBrush}"
													               Margin="0,0,10,0"
													               NumberDecimalDigits="0"
													               VerticalAlignment="Center"
													               Width="50"
													               MinValue="1"
													               Step="1"
                                                                   MaxValue="100000"
													               Value="{Binding SelectedTestLevelSet.IntervalValue1}"
                                                                   AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_Interval1">
                                                    <i:Interaction.Behaviors>
                                                        <behaviors:ShowChangedUpDownOnComparisonBehavior CompareValue="{Binding TestLevelSetWithoutChanges.IntervalValue1}"/>
                                                    </i:Interaction.Behaviors>
                                                </syncfusion:UpDown>
                                                <ComboBox VerticalAlignment="Center"
											              MinWidth="150"
											              Margin="0,0,10,0"
											              SelectedItem="{Binding SelectedTestLevelSet.IntervalType1}"
                                                          AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_IntervalType1">
                                                    <i:Interaction.Behaviors>
                                                        <behaviors:ShowChangedComboBoxOnComparisonBehavior CompareValue="{Binding TestLevelSetWithoutChanges.IntervalType1}"/>
                                                    </i:Interaction.Behaviors>
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}">
																	            <styles:DynamicContainerStyle.DerivedStyle>
																		            <Style TargetType="TextBlock">
																			            <Style.Triggers>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.EveryXShifts}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|Every x shifts}"/>
																				            </DataTrigger>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.EveryXDays}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|Every x days}"/>
																				            </DataTrigger>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAShift}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a shift}"/>
																				            </DataTrigger>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesADay}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a day}"/>
																				            </DataTrigger>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAWeek}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a week}"/>
																				            </DataTrigger>
                                                                                            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAMonth}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a month}"/>
																				            </DataTrigger>
                                                                                            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAYear}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a year}"/>
																				            </DataTrigger>
																			            </Style.Triggers>
																		            </Style>
																	            </styles:DynamicContainerStyle.DerivedStyle>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                    <commonentities:IntervalType>EveryXShifts</commonentities:IntervalType>
                                                    <commonentities:IntervalType>EveryXDays</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAShift</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesADay</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAWeek</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAMonth</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAYear</commonentities:IntervalType>
                                                </ComboBox>
                                            </StackPanel>

                                            <TextBlock Grid.Column="0"
										               Grid.Row="1"
										               HorizontalAlignment="Right"
										               VerticalAlignment="Center"
										               Margin="10,0,30,0"
										               Text="{wpf:Gettext TestLevelSet parameters|Sample number}"/>
                                            <syncfusion:UpDown Grid.Column="1"
												               Grid.Row="1"
												               ZeroColor="{DynamicResource ForegroundBrush}"
												               NumberDecimalDigits="0"
												               HorizontalAlignment="Left"
												               VerticalAlignment="Center"
												               Width="50"
												               MinValue="1"
                                                               MaxValue="100000"
												               Step="1"
												               Value="{Binding SelectedTestLevelSet.SampleNumber1}"
                                                               AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_SampleNumber1">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedUpDownOnComparisonBehavior CompareValue="{Binding TestLevelSetWithoutChanges.SampleNumber1}"/>
                                                </i:Interaction.Behaviors>
                                            </syncfusion:UpDown>

                                            <TextBlock Grid.Column="0"
										               Grid.Row="2"
										               HorizontalAlignment="Right"
										               VerticalAlignment="Center"
										               Margin="10,0,30,0"
										               Text="{wpf:Gettext TestLevelSet parameters|Consider working calendar}"/>
                                            <CheckBox Grid.Column="1"
										              Grid.Row="2"
										              IsChecked="{Binding SelectedTestLevelSet.ConsiderWorkingCalendar1}"
										              HorizontalAlignment="Left"
										              VerticalAlignment="Center"
										              VerticalContentAlignment="Center"
                                                      AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_ConsiderWorkingCalendar1">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding TestLevelSetWithoutChanges.ConsiderWorkingCalendar1}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </Grid>
                                    </GroupBox>

                                    <c:ExtendedHeaderGroupBox Margin="10"
										                      Header="{wpf:Gettext TestLevelsView|Test level 2}">
                                        <c:ExtendedHeaderGroupBox.TopRightCornerObject>
                                            <CheckBox VerticalAlignment="Center"
                                                      HorizontalAlignment="Right"
                                                      IsChecked="{Binding SelectedTestLevelSet.IsActive2}"
                                                      Margin="10,0"
                                                      AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_TestLevelSet2Active"/>
                                        </c:ExtendedHeaderGroupBox.TopRightCornerObject>

                                        <Grid MinWidth="400"
								              Margin="0,10"
								              IsEnabled="{Binding SelectedTestLevelSet.IsActive2}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="35"/>
                                                <RowDefinition Height="35"/>
                                                <RowDefinition Height="35"/>
                                            </Grid.RowDefinitions>

                                            <TextBlock Grid.Column="0"
										               Grid.Row="0"
										               HorizontalAlignment="Right"
										               VerticalAlignment="Center"
										               Margin="10,0,30,0"
										               Text="{wpf:Gettext TestLevelSet parameters|Interval}"/>
                                            <StackPanel Grid.Column="1"
											            Grid.Row="0"
											            Orientation="Horizontal">
                                                <syncfusion:UpDown ZeroColor="{DynamicResource ForegroundBrush}"
													               Margin="0,0,10,0"
													               NumberDecimalDigits="0"
													               VerticalAlignment="Center"
													               Width="50"
													               MinValue="1"
                                                                   MaxValue="100000"
													               Step="1"
													               Value="{Binding SelectedTestLevelSet.IntervalValue2}"
                                                                   AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_Interval2">
                                                    <i:Interaction.Behaviors>
                                                        <behaviors:ShowChangedUpDownOnComparisonBehavior CompareValue="{Binding TestLevelSetWithoutChanges.IntervalValue2}"/>
                                                    </i:Interaction.Behaviors>
                                                </syncfusion:UpDown>
                                                <ComboBox VerticalAlignment="Center"
											              MinWidth="150"
											              Margin="0,0,10,0"
											              SelectedItem="{Binding SelectedTestLevelSet.IntervalType2}"
                                                          AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_IntervalType2">
                                                    <i:Interaction.Behaviors>
                                                        <behaviors:ShowChangedComboBoxOnComparisonBehavior CompareValue="{Binding TestLevelSetWithoutChanges.IntervalType2}"/>
                                                    </i:Interaction.Behaviors>
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}">
																	            <styles:DynamicContainerStyle.DerivedStyle>
																		            <Style TargetType="TextBlock">
																			            <Style.Triggers>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.EveryXShifts}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|Every x shifts}"/>
																				            </DataTrigger>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.EveryXDays}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|Every x days}"/>
																				            </DataTrigger>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAShift}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a shift}"/>
																				            </DataTrigger>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesADay}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a day}"/>
																				            </DataTrigger>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAWeek}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a week}"/>
																				            </DataTrigger>
                                                                                            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAMonth}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a month}"/>
																				            </DataTrigger>
                                                                                            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAYear}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a year}"/>
																				            </DataTrigger>
																			            </Style.Triggers>
																		            </Style>
																	            </styles:DynamicContainerStyle.DerivedStyle>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                    <commonentities:IntervalType>EveryXShifts</commonentities:IntervalType>
                                                    <commonentities:IntervalType>EveryXDays</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAShift</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesADay</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAWeek</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAMonth</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAYear</commonentities:IntervalType>
                                                </ComboBox>
                                            </StackPanel>

                                            <TextBlock Grid.Column="0"
										               Grid.Row="1"
										               HorizontalAlignment="Right"
										               VerticalAlignment="Center"
										               Margin="10,0,30,0"
										               Text="{wpf:Gettext TestLevelSet parameters|Sample number}"/>
                                            <syncfusion:UpDown Grid.Column="1"
												               Grid.Row="1"
												               ZeroColor="{DynamicResource ForegroundBrush}"
												               NumberDecimalDigits="0"
												               HorizontalAlignment="Left"
												               VerticalAlignment="Center"
												               Width="50"
												               MinValue="1"
                                                               MaxValue="100000"
												               Step="1"
												               Value="{Binding SelectedTestLevelSet.SampleNumber2}"
                                                               AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_SampleNumber2">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedUpDownOnComparisonBehavior CompareValue="{Binding TestLevelSetWithoutChanges.SampleNumber2}"/>
                                                </i:Interaction.Behaviors>
                                            </syncfusion:UpDown>

                                            <TextBlock Grid.Column="0"
										               Grid.Row="2"
										               HorizontalAlignment="Right"
										               VerticalAlignment="Center"
										               Margin="10,0,30,0"
										               Text="{wpf:Gettext TestLevelSet parameters|Consider working calendar}"/>
                                            <CheckBox Grid.Column="1"
										              Grid.Row="2"
										              IsChecked="{Binding SelectedTestLevelSet.ConsiderWorkingCalendar2}"
										              HorizontalAlignment="Left"
										              VerticalAlignment="Center"
										              VerticalContentAlignment="Center"
                                                      AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_ConsiderWorkingCalendar2">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding TestLevelSetWithoutChanges.ConsiderWorkingCalendar2}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </Grid>
                                    </c:ExtendedHeaderGroupBox>

                                    <c:ExtendedHeaderGroupBox Margin="10"
										                      Header="{wpf:Gettext TestLevelsView|Test level 3}">
                                        <c:ExtendedHeaderGroupBox.TopRightCornerObject>
                                            <CheckBox VerticalAlignment="Center"
                                                      HorizontalAlignment="Right"
                                                      IsChecked="{Binding SelectedTestLevelSet.IsActive3}"
                                                      Margin="10,0"
                                                      AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_TestLevelSet3Active"/>
                                        </c:ExtendedHeaderGroupBox.TopRightCornerObject>

                                        <Grid MinWidth="400"
								              Margin="0,10"
								              IsEnabled="{Binding SelectedTestLevelSet.IsActive3}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="35"/>
                                                <RowDefinition Height="35"/>
                                                <RowDefinition Height="35"/>
                                            </Grid.RowDefinitions>

                                            <TextBlock Grid.Column="0"
										               Grid.Row="0"
										               HorizontalAlignment="Right"
										               VerticalAlignment="Center"
										               Margin="10,0,30,0"
										               Text="{wpf:Gettext TestLevelSet parameters|Interval}"/>
                                            <StackPanel Grid.Column="1"
											            Grid.Row="0"
											            Orientation="Horizontal">
                                                <syncfusion:UpDown ZeroColor="{DynamicResource ForegroundBrush}"
													               Margin="0,0,10,0"
													               NumberDecimalDigits="0"
													               VerticalAlignment="Center"
													               Width="50"
													               MinValue="1"
                                                                   MaxValue="100000"
													               Step="1"
													               Value="{Binding SelectedTestLevelSet.IntervalValue3}"
                                                                   AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_Interval3">
                                                    <i:Interaction.Behaviors>
                                                        <behaviors:ShowChangedUpDownOnComparisonBehavior CompareValue="{Binding TestLevelSetWithoutChanges.IntervalValue3}"/>
                                                    </i:Interaction.Behaviors>
                                                </syncfusion:UpDown>
                                                <ComboBox VerticalAlignment="Center"
											              MinWidth="150"
											              Margin="0,0,10,0"
											              SelectedItem="{Binding SelectedTestLevelSet.IntervalType3}"
                                                          AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_IntervalType3">
                                                    <i:Interaction.Behaviors>
                                                        <behaviors:ShowChangedComboBoxOnComparisonBehavior CompareValue="{Binding TestLevelSetWithoutChanges.IntervalType3}"/>
                                                    </i:Interaction.Behaviors>
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}">
																	            <styles:DynamicContainerStyle.DerivedStyle>
																		            <Style TargetType="TextBlock">
																			            <Style.Triggers>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.EveryXShifts}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|Every x shifts}"/>
																				            </DataTrigger>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.EveryXDays}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|Every x days}"/>
																				            </DataTrigger>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAShift}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a shift}"/>
																				            </DataTrigger>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesADay}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a day}"/>
																				            </DataTrigger>
																				            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAWeek}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a week}"/>
																				            </DataTrigger>
                                                                                            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAMonth}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a month}"/>
																				            </DataTrigger>
                                                                                            <DataTrigger Binding="{Binding}" Value="{x:Static commonentities:IntervalType.XTimesAYear}">
																					            <Setter Property="Text" Value="{wpf:Gettext IntervalType|X times a year}"/>
																				            </DataTrigger>
																			            </Style.Triggers>
																		            </Style>
																	            </styles:DynamicContainerStyle.DerivedStyle>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                    <commonentities:IntervalType>EveryXShifts</commonentities:IntervalType>
                                                    <commonentities:IntervalType>EveryXDays</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAShift</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesADay</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAWeek</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAMonth</commonentities:IntervalType>
                                                    <commonentities:IntervalType>XTimesAYear</commonentities:IntervalType>
                                                </ComboBox>
                                            </StackPanel>

                                            <TextBlock Grid.Column="0"
										               Grid.Row="1"
										               HorizontalAlignment="Right"
										               VerticalAlignment="Center"
										               Margin="10,0,30,0"
										               Text="{wpf:Gettext TestLevelSet parameters|Sample number}"/>
                                            <syncfusion:UpDown Grid.Column="1"
												               Grid.Row="1"
												               ZeroColor="{DynamicResource ForegroundBrush}"
												               NumberDecimalDigits="0"
												               HorizontalAlignment="Left"
												               VerticalAlignment="Center"
												               Width="50"
												               MinValue="1"
                                                               MaxValue="100000"
												               Step="1"
												               Value="{Binding Path=SelectedTestLevelSet.SampleNumber3}"
                                                               AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_SampleNumber3">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedUpDownOnComparisonBehavior CompareValue="{Binding TestLevelSetWithoutChanges.SampleNumber3}"/>
                                                </i:Interaction.Behaviors>
                                            </syncfusion:UpDown>

                                            <TextBlock Grid.Column="0"
										               Grid.Row="2"
										               HorizontalAlignment="Right"
										               VerticalAlignment="Center"
										               Margin="10,0,30,0"
										               Text="{wpf:Gettext TestLevelSet parameters|Consider working calendar}"/>
                                            <CheckBox Grid.Column="1"
										              Grid.Row="2"
										              IsChecked="{Binding SelectedTestLevelSet.ConsiderWorkingCalendar3}"
										              HorizontalAlignment="Left"
										              VerticalAlignment="Center"
										              VerticalContentAlignment="Center"
                                                      AutomationProperties.AutomationId="AI_TLSView_TestLevelSetsTab_ConsiderWorkingCalendar3">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding TestLevelSetWithoutChanges.ConsiderWorkingCalendar3}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </Grid>
                                    </c:ExtendedHeaderGroupBox>
                                </WrapPanel>
                            </DockPanel>
                        </ScrollViewer>
                    </DockPanel>
                </TabItem.Content>
            </TabItem>

            <TabItem x:Name="WorkingCalendarTab"
                     Header="{wpf:Gettext TestLevelSetView|Working calendar}"
                     styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TabItem}}"
                     PreviewMouseLeftButtonDown="WorkingCalendarTab_OnPreviewMouseLeftButtonDown"
                     PreviewKeyDown="TabItem_OnPreviewKeyDown"
                     AutomationProperties.AutomationId="AI_TLSView_WorkingCalendarTab">
                <styles:DynamicContainerStyle.DerivedStyle>
                    <Style TargetType="TabItem">
                        <EventSetter Event="Selector.Selected" Handler="WorkingCalendarTab_Selected"/>
                    </Style>
                </styles:DynamicContainerStyle.DerivedStyle>

                <TabItem.Content>
                    <Grid Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <syncfusion:CalendarEdit x:Name="WorkingCalendar"
                                                 Grid.Column="0"
                                                 Grid.Row="0"
                                                 Width="400"
                                                 Height="400"
                                                 Margin="0,0,10,10"
                                                 MinDate="01/01/1900"
                                                 MonthChanged="WorkingCalendar_OnMonthChanged"
                                                 DateChanged="WorkingCalendar_DateChanged"
                                                 AutomationProperties.AutomationId="AI_TLSView_WorkingCalendarTab_Calendar"/>

                        <Grid Grid.Column="0"
                              Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="4*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Rectangle Grid.Column="0"
                                       Grid.Row="0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Margin="0,2"
                                       Width="15"
                                       Height="15">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{Binding HolidayColor}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Grid.Column="0"
                                       Grid.Row="1"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Margin="0,2"
                                       Width="15"
                                       Height="15">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{Binding ExtraShiftColor}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Grid.Column="0"
                                       Grid.Row="2"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Margin="0,2"
                                       Width="15"
                                       Height="15">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{Binding WeekendColor}"/>
                                </Rectangle.Fill>
                            </Rectangle>

                            <TextBlock Grid.Column="1"
                                       Grid.Row="0"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="0,5"
                                       Text="{wpf:Gettext Working calendar parameters|Workfree day}"/>
                            <TextBlock Grid.Column="1"
                                       Grid.Row="1"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="0,5"
                                       Text="{wpf:Gettext Working calendar parameters|Extra shift}"/>
                            <TextBlock Grid.Column="1"
                                       Grid.Row="2"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="0,5"
                                       Text="{wpf:Gettext Working calendar parameters|Weekend}"/>

                            <CheckBox Grid.Column="2"
                                      Grid.Row="1"
                                      Content="{wpf:Gettext Working calendar parameters|Saturday workfree}"
                                      IsChecked="{Binding AreSaturdaysFree}"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      AutomationProperties.AutomationId="AI_TLSView_WorkingCalendarTab_SaturdayWorkfree"/>
                            <CheckBox Grid.Column="2"
                                      Grid.Row="2"
                                      Content="{wpf:Gettext Working calendar parameters|Sunday workfree}"
                                      IsChecked="{Binding AreSundaysFree}"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      AutomationProperties.AutomationId="AI_TLSView_WorkingCalendarTab_SundayWorkfree"/>
                        </Grid>

                        <Grid Grid.Column="1"
                              Grid.Row="0"
                              Grid.RowSpan="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0"
                                       Margin="10"
                                       Text="{wpf:Gettext Working calendar parameters|Single entries}"/>

                            <c:ExtendedSfDataGrid x:Name="WorkingCalendarEntryDataGridOnce"
                                                  Grid.Column="0"
                                                  Grid.Row="1"
                                                  FilterPopupStyle="{StaticResource GridFilterStyle}"
                                                  AutoGenerateColumns="False"
                                                  AllowFiltering="True"
                                                  AllowResizingColumns="True"
                                                  ColumnSizer="Auto"
                                                  ItemsSource="{Binding SingleWorkingCalendarEntries}"
                                                  AutoExpandGroups="True"
                                                  SelectionMode="Single"
                                                  SelectionChanged="WorkingCalendarEntryDataGridOnce_OnSelectionChanged"
                                                  RowStyle="{StaticResource customRowStyleSingleEntryDG}"
                                                  HeaderStyle="{StaticResource customHeaderStyleSingleEntryDG}"
                                                  AutomationProperties.AutomationId="AI_TLSView_WorkingCalendarTab_SingleEntriesGrid">
                                <c:ExtendedSfDataGrid.Columns>
                                    <syncfusion:GridTextColumn HeaderText="{wpf:Gettext Working calendar parameters|Date}" MappingName="Date">
                                        <syncfusion:GridTextColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Date, Converter={StaticResource ShortDateConverter}}"/>
                                            </DataTemplate>
                                        </syncfusion:GridTextColumn.CellTemplate>
                                    </syncfusion:GridTextColumn>
                                    <syncfusion:GridTextColumn HeaderText="{wpf:Gettext Working calendar parameters|Description}" MappingName="Description"/>
                                    <syncfusion:GridTemplateColumn HeaderText="{wpf:Gettext Working calendar parameters|Type}" MappingName="Type">
                                        <syncfusion:GridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock VerticalAlignment="Center"
                                                           Margin="2">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Type}" Value="{x:Static entities:WorkingCalendarEntryType.Holiday}">
                                                                    <Setter Property="Text" Value="{wpf:Gettext  Working calendar parameters|Holiday}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Type}" Value="{x:Static entities:WorkingCalendarEntryType.ExtraShift}">
                                                                    <Setter Property="Text" Value="{wpf:Gettext  Working calendar parameters|Extra shift}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </DataTemplate>
                                        </syncfusion:GridTemplateColumn.CellTemplate>
                                    </syncfusion:GridTemplateColumn>
                                </c:ExtendedSfDataGrid.Columns>

                                <c:ExtendedSfDataGrid.SortColumnDescriptions>
                                    <syncfusion:SortColumnDescription ColumnName="Date" SortDirection="Ascending" />
                                </c:ExtendedSfDataGrid.SortColumnDescriptions>
                            </c:ExtendedSfDataGrid>


                            <TextBlock Grid.Row="2"
                                       Margin="10"
                                       Text="{wpf:Gettext Working calendar parameters|Yearly entries}"/>

                            <c:ExtendedSfDataGrid x:Name="WorkingCalendarEntryDataGridYearly"
                                                  Grid.Column="0"
                                                  Grid.Row="3"
                                                  FilterPopupStyle="{StaticResource GridFilterStyle}"
                                                  AutoGenerateColumns="False"
                                                  AllowFiltering="True"
                                                  AllowResizingColumns="True"
                                                  ColumnSizer="Auto"
                                                  ItemsSource="{Binding YearlyWorkingCalendarEntries}"
                                                  AutoExpandGroups="True"
                                                  SelectionMode="Single"
                                                  SelectionChanged="WorkingCalendarEntryDataGridYearly_OnSelectionChanged"
                                                  RowStyle="{StaticResource customRowStyleAnnuallyDG}"
                                                  HeaderStyle="{StaticResource customHeaderStyleAnnuallyDG}"
                                                  AutomationProperties.AutomationId="AI_TLSView_WorkingCalendarTab_AnnuallyEntriesGrid">
                                <c:ExtendedSfDataGrid.Columns>
                                    <syncfusion:GridTextColumn HeaderText="{wpf:Gettext Working calendar parameters|Date}" MappingName="Date">
                                        <syncfusion:GridTextColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Date, Converter={StaticResource ShortDateConverter}}"/>
                                            </DataTemplate>
                                        </syncfusion:GridTextColumn.CellTemplate>
                                    </syncfusion:GridTextColumn>
                                    <syncfusion:GridTextColumn HeaderText="{wpf:Gettext Working calendar parameters|Description}" MappingName="Description"/>
                                    <syncfusion:GridTemplateColumn HeaderText="{wpf:Gettext Working calendar parameters|Type}" MappingName="Type">
                                        <syncfusion:GridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock VerticalAlignment="Center"
                                                           Margin="2">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Type}" Value="{x:Static entities:WorkingCalendarEntryType.Holiday}">
                                                                    <Setter Property="Text" Value="{wpf:Gettext  Working calendar parameters|Holiday}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Type}" Value="{x:Static entities:WorkingCalendarEntryType.ExtraShift}">
                                                                    <Setter Property="Text" Value="{wpf:Gettext  Working calendar parameters|Extra shift}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </DataTemplate>
                                        </syncfusion:GridTemplateColumn.CellTemplate>
                                    </syncfusion:GridTemplateColumn>
                                </c:ExtendedSfDataGrid.Columns>

                                <c:ExtendedSfDataGrid.SortColumnDescriptions>
                                    <syncfusion:SortColumnDescription ColumnName="Date" SortDirection="Ascending" />
                                </c:ExtendedSfDataGrid.SortColumnDescriptions>
                            </c:ExtendedSfDataGrid>
                        </Grid>
                    </Grid>
                </TabItem.Content>
            </TabItem>

            <TabItem x:Name="ShiftManagementTab" 
                     Header="{wpf:Gettext TestLevelSetView|Shift management}"
                     PreviewMouseLeftButtonDown="ShiftManagementTab_OnPreviewMouseLeftButtonDown"
                     PreviewKeyDown="TabItem_OnPreviewKeyDown"
                     AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab">
                <TabItem.Content>
                    <Grid Margin="15">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Column="0"
                                   Grid.Row="0"
                                   Text="{wpf:Gettext Shift management|First shift of day}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Margin="0,0,50,0"/>
                        <TextBlock Grid.Column="1"
                                   Grid.Row="0"
                                   Text="{wpf:Gettext Shift management|from}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="5,0"
                                   AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_FirstShiftFromText"/>
                        <Border x:Name="FirstShiftStartTimePickerBorder"
                                Grid.Column="2"
                                Grid.Row="0"
                                Margin="10,5"
                                BorderBrush="Red"
                                BorderThickness="0">
                            <syncfusion:SfTimePicker x:Name="FirstShiftStartTimePicker"
                                                     FormatString="HH:mm"
                                                     SelectorFormatString="H/m"
                                                     ShowDropDownButton="True"
                                                     ValueChanged="ShiftManagementTimePicker_OnValueChanged"
                                                     AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_FirstShiftFrom">
                                <i:Interaction.Behaviors>
                                    <behaviors:ShowChangedTimePickerOnComparisonBehavior CompareValue="{Binding ShiftManagementWithoutChanges.FirstShiftStart}"/>
                                </i:Interaction.Behaviors>
                            </syncfusion:SfTimePicker>
                        </Border>
                        <TextBlock Grid.Column="3"
                                   Grid.Row="0"
                                   Text="{wpf:Gettext Shift management|to}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="5,0"
                                   AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_FirstShiftToText"/>

                        <Border x:Name="FirstShiftEndTimePickerBorder"
                                Grid.Column="4"
                                Grid.Row="0"
                                Margin="10,5"
                                BorderBrush="Red"
                                BorderThickness="0">
                            <syncfusion:SfTimePicker x:Name="FirstShiftEndTimePicker"
                                                     FormatString="HH:mm"
                                                     SelectorFormatString="H/m"
                                                     ShowDropDownButton="True"
                                                     ValueChanged="ShiftManagementTimePicker_OnValueChanged"
                                                     AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_FirstShiftTo">
                                <i:Interaction.Behaviors>
                                    <behaviors:ShowChangedTimePickerOnComparisonBehavior CompareValue="{Binding ShiftManagementWithoutChanges.FirstShiftEnd}"/>
                                </i:Interaction.Behaviors>
                            </syncfusion:SfTimePicker>
                        </Border>

                        <TextBlock Grid.Column="0"
                                   Grid.Row="1"
                                   Text="{wpf:Gettext Shift management|Second shift of day}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Margin="0,0,50,0"/>
                        <TextBlock Grid.Column="1"
                                   Grid.Row="1"
                                   Text="{wpf:Gettext Shift management|from}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="5,0"
                                   AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_SecondShiftFromText"/>
                        <Border x:Name="SecondShiftStartTimePickerBorder" 
                                Grid.Column="2"
                                Grid.Row="1"
                                Margin="10,5"
                                BorderBrush="Red"
                                BorderThickness="0">
                            <syncfusion:SfTimePicker x:Name="SecondShiftStartTimePicker"
                                                     FormatString="HH:mm"
                                                     SelectorFormatString="H/m"
                                                     ShowDropDownButton="True"
                                                     IsEnabled="{Binding CurrentShiftManagement.IsSecondShiftActive}"
                                                     ValueChanged="ShiftManagementTimePicker_OnValueChanged"
                                                     AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_SecondShiftFrom">
                                <i:Interaction.Behaviors>
                                    <behaviors:ShowChangedTimePickerOnComparisonBehavior CompareValue="{Binding ShiftManagementWithoutChanges.SecondShiftStart}"/>
                                </i:Interaction.Behaviors>
                            </syncfusion:SfTimePicker>
                        </Border>
                        <TextBlock Grid.Column="3"
                                   Grid.Row="1"
                                   Text="{wpf:Gettext Shift management|to}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="5,0"
                                   AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_SecondShiftToText"/>
                        <Border x:Name="SecondShiftEndTimePickerBorder"
                                Grid.Column="4"
                                Grid.Row="1"
                                Margin="10,5"
                                BorderBrush="Red"
                                BorderThickness="0">
                            <syncfusion:SfTimePicker x:Name="SecondShiftEndTimePicker"
                                                     FormatString="HH:mm"
                                                     SelectorFormatString="H/m"
                                                     ShowDropDownButton="True"
                                                     IsEnabled="{Binding CurrentShiftManagement.IsSecondShiftActive}"
                                                     ValueChanged="ShiftManagementTimePicker_OnValueChanged"
                                                     AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_SecondShiftTo">
                                <i:Interaction.Behaviors>
                                    <behaviors:ShowChangedTimePickerOnComparisonBehavior CompareValue="{Binding ShiftManagementWithoutChanges.SecondShiftEnd}"/>
                                </i:Interaction.Behaviors>
                            </syncfusion:SfTimePicker>
                        </Border>
                        <CheckBox Grid.Column="5"
                                  Grid.Row="1"
                                  Content="{wpf:Gettext Shift management|active}"
                                  VerticalAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  Margin="30,0,0,0"
                                  IsChecked="{Binding CurrentShiftManagement.IsSecondShiftActive}"
                                  Checked="IsShiftActiveToggleButton_Changed"
                                  Unchecked="IsShiftActiveToggleButton_Changed"
                                  AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_SecondShiftActive">
                            <i:Interaction.Behaviors>
                                <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding ShiftManagementWithoutChanges.IsSecondShiftActive}"/>
                            </i:Interaction.Behaviors>
                        </CheckBox>

                        <TextBlock Grid.Column="0"
                                   Grid.Row="2"
                                   Text="{wpf:Gettext Shift management|Third shift of day}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Margin="0,0,50,0"/>
                        <TextBlock Grid.Column="1"
                                   Grid.Row="2"
                                   Text="{wpf:Gettext Shift management|from}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="5,0"
                                   AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_ThirdShiftFromText"/>
                        <Border x:Name="ThirdShiftStartTimePickerBorder"
                                Grid.Column="2"
                                Grid.Row="2"
                                Margin="10,5"
                                BorderBrush="Red"
                                BorderThickness="0">
                            <syncfusion:SfTimePicker x:Name="ThirdShiftStartTimePicker"
                                                     FormatString="HH:mm"
                                                     SelectorFormatString="H/m"
                                                     ShowDropDownButton="True"
                                                     IsEnabled="{Binding CurrentShiftManagement.IsThirdShiftActive}"
                                                     ValueChanged="ShiftManagementTimePicker_OnValueChanged"
                                                     AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_ThirdShiftFrom">
                                <i:Interaction.Behaviors>
                                    <behaviors:ShowChangedTimePickerOnComparisonBehavior CompareValue="{Binding ShiftManagementWithoutChanges.ThirdShiftStart}"/>
                                </i:Interaction.Behaviors>
                            </syncfusion:SfTimePicker>
                        </Border>
                        <TextBlock Grid.Column="3"
                                   Grid.Row="2"
                                   Text="{wpf:Gettext Shift management|to}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="5,0"
                                   AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_ThirdShiftToText"/>
                        <Border x:Name="ThirdShiftEndTimePickerBorder"
                                Grid.Column="4"
                                Grid.Row="2"
                                Margin="10,5"
                                BorderBrush="Red"
                                BorderThickness="0">
                            <syncfusion:SfTimePicker x:Name="ThirdShiftEndTimePicker"
                                                     FormatString="HH:mm"
                                                     SelectorFormatString="H/m"
                                                     ShowDropDownButton="True"
                                                     IsEnabled="{Binding CurrentShiftManagement.IsThirdShiftActive}"
                                                     ValueChanged="ShiftManagementTimePicker_OnValueChanged"
                                                     AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_ThirdShiftTo">
                                <i:Interaction.Behaviors>
                                    <behaviors:ShowChangedTimePickerOnComparisonBehavior CompareValue="{Binding ShiftManagementWithoutChanges.ThirdShiftEnd}"/>
                                </i:Interaction.Behaviors>
                            </syncfusion:SfTimePicker>
                        </Border>
                        <CheckBox Grid.Column="5"
                                  Grid.Row="2"
                                  Content="{wpf:Gettext Shift management|active}"
                                  VerticalAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  Margin="30,0,0,0"
                                  IsChecked="{Binding CurrentShiftManagement.IsThirdShiftActive}"
                                  Checked="IsShiftActiveToggleButton_Changed"
                                  Unchecked="IsShiftActiveToggleButton_Changed"
                                  AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_ThirdShiftActive">
                            <i:Interaction.Behaviors>
                                <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding ShiftManagementWithoutChanges.IsThirdShiftActive}"/>
                            </i:Interaction.Behaviors>
                        </CheckBox>


                        <TextBlock Grid.Column="0"
                                   Grid.Row="4"
                                   Text="{wpf:Gettext Shift management|Change of day}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Margin="0,0,50,0"
                                   AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_ChangeOfDayText"/>
                        <syncfusion:SfTimePicker x:Name="ChangeOfDayTimePicker"
                                                 Grid.Column="1"
                                                 Grid.Row="4"
                                                 Grid.ColumnSpan="5"
                                                 Margin="5"
                                                 FormatString="HH:mm"
                                                 SelectorFormatString="H/m"
                                                 ShowDropDownButton="True"
                                                 ValueChanged="ShiftManagementTimePicker_OnValueChanged"
                                                 AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_ChangeOfDay">
                            <i:Interaction.Behaviors>
                                <behaviors:ShowChangedTimePickerOnComparisonBehavior CompareValue="{Binding ShiftManagementWithoutChanges.ChangeOfDay}"/>
                            </i:Interaction.Behaviors>
                        </syncfusion:SfTimePicker>
                        <TextBlock Grid.Column="0"
                                   Grid.Row="5"
                                   Text="{wpf:Gettext Shift management|First day of week}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Margin="0,0,50,0"/>
                        <ComboBox Grid.Column="1"
                                  Grid.Row="5"
                                  Grid.ColumnSpan="5"
                                  Width="250"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  Margin="5"
                                  SelectedItem="{Binding CurrentShiftManagement.FirstDayOfWeek}"
                                  AutomationProperties.AutomationId="AI_TLSView_ShiftManagementTab_FirstDayOfWeek">
                            <i:Interaction.Behaviors>
                                <behaviors:ShowChangedComboBoxOnComparisonBehavior CompareValue="{Binding ShiftManagementWithoutChanges.FirstDayOfWeek}"/>
                            </i:Interaction.Behaviors>

                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}">
                                        <styles:DynamicContainerStyle.DerivedStyle>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding}" Value="{x:Static system:DayOfWeek.Monday}">
                                                        <Setter Property="Text" Value="{wpf:Gettext Shift management|Monday}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding}" Value="{x:Static system:DayOfWeek.Tuesday}">
                                                        <Setter Property="Text" Value="{wpf:Gettext Shift management|Tuesday}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding}" Value="{x:Static system:DayOfWeek.Wednesday}">
                                                        <Setter Property="Text" Value="{wpf:Gettext Shift management|Wednesday}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding}" Value="{x:Static system:DayOfWeek.Thursday}">
                                                        <Setter Property="Text" Value="{wpf:Gettext Shift management|Thursday}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding}" Value="{x:Static system:DayOfWeek.Friday}">
                                                        <Setter Property="Text" Value="{wpf:Gettext Shift management|Friday}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding}" Value="{x:Static system:DayOfWeek.Saturday}">
                                                        <Setter Property="Text" Value="{wpf:Gettext Shift management|Saturday}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding}" Value="{x:Static system:DayOfWeek.Sunday}">
                                                        <Setter Property="Text" Value="{wpf:Gettext Shift management|Sunday}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </styles:DynamicContainerStyle.DerivedStyle>
                                    </TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>

                            <system:DayOfWeek>Monday</system:DayOfWeek>
                            <system:DayOfWeek>Tuesday</system:DayOfWeek>
                            <system:DayOfWeek>Wednesday</system:DayOfWeek>
                            <system:DayOfWeek>Thursday</system:DayOfWeek>
                            <system:DayOfWeek>Friday</system:DayOfWeek>
                            <system:DayOfWeek>Saturday</system:DayOfWeek>
                            <system:DayOfWeek>Sunday</system:DayOfWeek>
                        </ComboBox>
                    </Grid>
                </TabItem.Content>
            </TabItem>
        </TabControl>
    </DockPanel>
</UserControl>
