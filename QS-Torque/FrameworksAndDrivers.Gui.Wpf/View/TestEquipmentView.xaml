<UserControl x:Class="FrameworksAndDrivers.Gui.Wpf.View.TestEquipmentView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:styles="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View.Styles"
             xmlns:controls="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View.Controls"
             xmlns:wpf="clr-namespace:NGettext.Wpf;assembly=NGettext.Wpf"
             xmlns:viewModel="clr-namespace:FrameworksAndDrivers.Gui.Wpf.ViewModel"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:view="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View"
             xmlns:behaviors="clr-namespace:FrameworksAndDrivers.Gui.Wpf.View.Behaviors"
             xmlns:enums="clr-namespace:Common.Types.Enums;assembly=Common.Types"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance viewModel:TestEquipmentViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="1000"
             d:DesignWidth="1200"
             AutomationProperties.AutomationId="AI_TestEquipmentView">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/ButtonStyles.xaml" />
                <ResourceDictionary Source="Styles/ComboBoxStyles.xaml" />
                <ResourceDictionary Source="Styles/TextBoxStyles.xaml" />
                <ResourceDictionary Source="Styles/TextBlockStyles.xaml" />
                <ResourceDictionary Source="Styles/GroupBoxStyles.xaml" />
                <ResourceDictionary Source="Styles/TabStyles.xaml" />
                <ResourceDictionary Source="Styles/TreeStyles.xaml" />
                <ResourceDictionary Source="Styles/SfDataGridStyles.xaml" />
                <ResourceDictionary Source="Styles/PanelStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="TestEquipmentParameterTextBlockStyle"
                   TargetType="TextBlock">
                <Setter Property="HorizontalAlignment"
                        Value="Right" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="Margin"
                        Value="8" />
            </Style>
            <Style x:Key="TestEquipmentParameterTextBoxStyle"
                   TargetType="TextBox">
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="Width"
                        Value="300" />
                <Setter Property="Margin"
                        Value="0,8,8,8" />
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TestEquipmentPathTextBoxStyle"
                   TargetType="TextBox">
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="Width"
                        Value="330" />
                <Setter Property="Margin"
                        Value="0,8,8,8" />
            </Style>
            <Style x:Key="TestEquipmentParameterComboBoxStyle"
                   TargetType="ComboBox">
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="Width"
                        Value="300" />
            </Style>
            <Style x:Key="TestEquipmentHelperTableButtonStyle"
                   TargetType="Button">
                <Setter Property="HorizontalAlignment"
                        Value="Right" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="Margin"
                        Value="0,5,5,5" />
            </Style>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

            <ControlTemplate x:Key="ValidationTemplate">
                <Border BorderBrush="Red"
                        BorderThickness="1">
                    <Grid Background="Transparent"
                          ToolTip="{Binding Path=/ErrorContent}">
                        <AdornedElementPlaceholder />
                    </Grid>
                </Border>
            </ControlTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <DockPanel>
        <TabControl DockPanel.Dock="Top"
                    Height="120">
            <TabItem Header="{wpf:Gettext TestEquipmentView Ribbon|Start}"
                     styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TabItem}}">
                <TabItem.Content>
                    <StackPanel Orientation="Horizontal">
                        <Button Width="70"
                                Height="60"
                                Margin="10,5"
                                VerticalContentAlignment="Top"
                                Style="{DynamicResource TransparentButtonStyle}"
                                Command="{Binding AddTestEquipmentCommand}"
                                AutomationProperties.AutomationId="AI_TeView_AddTestEquipment">
                            <StackPanel>
                                <controls:ThemeImage Source="pack://application:,,,/Resources;component/Icons/add.png"
                                              Height="30" 
                                              Margin="0,0,0,2"/>
                                <TextBlock Text="{wpf:Gettext TestEquipmentView Ribbon|Add}"
                                           FontSize="10"
                                           TextAlignment="Center" 
                                           TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Button>

                        <Button Width="70"
                                Height="60"
                                Margin="10,5"
                                VerticalContentAlignment="Top"
                                Style="{DynamicResource TransparentButtonStyle}"
                                Command="{Binding RemoveTestEquipmentCommand}"
                                AutomationProperties.AutomationId="AI_TeView_DeleteTestEquipment">

                            <StackPanel>
                                <controls:ThemeImage Source="pack://application:,,,/Resources;component/Icons/delete.png"
                                              Height="30" 
                                              Margin="0,0,0,2"/>
                                <TextBlock Text="{wpf:Gettext TestEquipmentView Ribbon|Remove}"
                                           FontSize="10"
                                           TextAlignment="Center" 
                                           TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Button>

                        <Button Width="70"
                                Height="60"
                                Margin="10,5"
                                VerticalContentAlignment="Top"
                                Command="{Binding SaveTestEquipmentCommand}"
                                Style="{DynamicResource TransparentButtonStyle}"
                                AutomationProperties.AutomationId="AI_TeView_SaveTestEquipment">
                            <StackPanel>
                                <controls:ThemeImage Source="pack://application:,,,/Resources;component/Icons/save.png"
                                              Height="30" 
                                              Margin="0,0,0,2"/>
                                <TextBlock Text="{wpf:Gettext TestEquipmentView Ribbon|Save}"
                                           FontSize="10"
                                           TextAlignment="Center" 
                                           TextWrapping="WrapWithOverflow"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </TabItem.Content>
            </TabItem>
        </TabControl>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="4*"
                                  MinWidth="600" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <syncfusion:TreeViewAdv Grid.Column="0"
                                    x:Name="TestEquipmentTree"
                                    Background="{DynamicResource ControlBackgroundBrush}"
                                    AnimationType="None"
                                    Margin="0,10,10,0"
                                    Sorting="Ascending"
                                    AllowDragDrop="False"
                                    AllowMultiSelect="False"
                                    SelectedTreeItem="{Binding Path=SelectedTreeItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=view:TestEquipmentView}, Delay=250, Mode=OneWayToSource, FallbackValue={x:Null}}"
                                    AutomationProperties.AutomationId="AI_TeView_TeTreeView">
                <syncfusion:TreeViewAdv.ItemContainerStyle>
                    <Style TargetType="syncfusion:TreeViewItemAdv">
                        <Setter Property="IsEditable" Value="False"/>
                        <Setter Property="AutomationProperties.AutomationId" Value="AI_TeView_TeTreeView_RootNode"/>
                    </Style>
                </syncfusion:TreeViewAdv.ItemContainerStyle>
            </syncfusion:TreeViewAdv>


            <GridSplitter Grid.Column="1"
                          Width="2"
                          HorizontalAlignment="Stretch"
                          Margin="0,10,0,0"
                          Background="{DynamicResource GridSplitterBackground}" />
            <Grid Grid.Column="2"
                  Margin="10,10,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TabControl Grid.Column="0" Visibility="{Binding IsTestEquipmentVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TabItem 
                        Name="TestEquipmentTabItem"
                        Header="{wpf:Gettext TestEquipmentView|Test equipment}" 
                        AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab">
                        <ScrollViewer Margin="0,10,10,10"
                                      VerticalScrollBarVisibility="Auto"
                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_ScrollViewer">
                            <WrapPanel Grid.IsSharedSizeScope="True">
                                <GroupBox Margin="10"
                                          HorizontalAlignment="Left"
                                          Header="{wpf:Gettext TestEquipmentView|Parameter}"
                                          Style="{DynamicResource EqualSizedGroupBoxStyle}">
                                    <Grid Margin="10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <TextBlock Grid.Column="0" Grid.Row="0"
                                                   Text="{wpf:Gettext TestEquipmentView|SerialNumber}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" />
                                        <TextBox Grid.Column="1" Grid.Row="0"
                                                 Text="{Binding SelectedTestEquipment.SerialNumber, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                                 MaxLength="20"
                                                 styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBox}}"
                                                 styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBoxStyle}" 
                                                 AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_SerialNumber">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedFromComparisonTextBoxBehavior ClearShownChangesParent="{Binding}"  CompareTo="{Binding SelectedTestEquipmentWithoutChanges.SerialNumber}"/>
                                            </i:Interaction.Behaviors>
                                        </TextBox>

                                        <TextBlock Grid.Column="0" Grid.Row="1"
                                                   Text="{wpf:Gettext TestEquipmentView|InventoryNumber}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                        <TextBox Grid.Column="1" Grid.Row="1"
                                                 Text="{Binding SelectedTestEquipment.InventoryNumber, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                                 MaxLength="20"
                                                 styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBox}}"
                                                 styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBoxStyle}"
                                                 AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_InventoryNumber">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedFromComparisonTextBoxBehavior ClearShownChangesParent="{Binding}"  CompareTo="{Binding SelectedTestEquipmentWithoutChanges.InventoryNumber}"/>
                                            </i:Interaction.Behaviors>
                                        </TextBox>

                                        <TextBlock Grid.Column="0" Grid.Row="2"
                                                   Text="{wpf:Gettext TestEquipmentView|Test equipment model}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" />
                                        <ComboBox Grid.Column="1"
                                                  Grid.Row="2"
                                                  ItemsSource="{Binding TestEquipmentModels}"
                                                  DisplayMemberPath="TestEquipmentModelName"
                                                  SelectedItem="{Binding SelectedTestEquipment.Model}"
                                                  styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type ComboBox}}"
                                                  styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterComboBoxStyle}"
                                                  AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_TestEquipmentModel">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedComboBoxOnComparisonBehavior ClearShownChangesParent="{Binding}" CompareValue="{Binding SelectedTestEquipmentWithoutChanges.Model}"/>
                                            </i:Interaction.Behaviors>
                                        </ComboBox>
                                        <Button Grid.Column="2"
                                                Grid.Row="2"
                                                styles:DynamicContainerStyle.BaseStyle="{DynamicResource HelperTableButtonStyle}"
                                                styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentHelperTableButtonStyle}" />


                                        <TextBlock Grid.Column="0" Grid.Row="3"
                                                   Text="{wpf:Gettext TestEquipmentView|Manufacturer}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                        <TextBox Grid.Column="1" Grid.Row="3" IsEnabled="False"
                                                 Text="{Binding SelectedTestEquipment.Model.ManufacturerName, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                                 styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBox}}"
                                                 styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBoxStyle}"
                                                 AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_Manufacturer"/>

                                        <TextBlock Grid.Column="0" Grid.Row="4"
                                                   Text="{wpf:Gettext TestEquipmentView|DataGate Version}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" />
                                        <ComboBox Grid.Column="1"
                                                  Grid.Row="4" 
                                                  IsEnabled="False"
                                                  ItemsSource="{Binding DataGateVersions}"
                                                  DisplayMemberPath="DataGateVersionsString"
                                                  SelectedItem="{Binding SelectedTestEquipment.DataGateVersion, Mode=OneWay}"
                                                  styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type ComboBox}}"
                                                  styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterComboBoxStyle}"
                                                  AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_DataGateVersion"
                                                  AutomationProperties.Name="{Binding SelectedTestEquipment.DataGateVersion.DataGateVersionsString, Mode=OneWay}">
                                        </ComboBox>

                                        <TextBlock Grid.Column="0" Grid.Row="5"
                                                   Text="{wpf:Gettext TestEquipmentView|Status}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                        <ComboBox Grid.Column="1"
                                                  Grid.Row="5"
                                                  ItemsSource="{Binding TestEquipmentStatusCollection}"
                                                  DisplayMemberPath="Value"
                                                  SelectedItem="{Binding SelectedTestEquipment.Status}"
                                                  styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type ComboBox}}"
                                                  styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterComboBoxStyle}"
                                                  AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_Status">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedComboBoxOnComparisonBehavior ClearShownChangesParent="{Binding}" CompareValue="{Binding SelectedTestEquipmentWithoutChanges.Status}"/>
                                            </i:Interaction.Behaviors>
                                        </ComboBox>
                                        <Button Grid.Column="2"
                                                Grid.Row="5"
                                                styles:DynamicContainerStyle.BaseStyle="{DynamicResource HelperTableButtonStyle}"
                                                styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentHelperTableButtonStyle}" />

                                        <TextBlock Grid.Column="0" Grid.Row="6"
                                                   Text="{wpf:Gettext TestEquipmentView|Firmware version}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                        <TextBox Grid.Column="1" Grid.Row="6"
                                                 Text="{Binding SelectedTestEquipment.Version, UpdateSourceTrigger=PropertyChanged}"
                                                 MaxLength="10"
                                                 MaxWidth="100"
                                                 styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBox}}"
                                                 styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBoxStyle}" 
                                                 AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_FirmwareVersion">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedFromComparisonTextBoxBehavior ClearShownChangesParent="{Binding}"  CompareTo="{Binding SelectedTestEquipmentWithoutChanges.Version}"/>
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                    </Grid>
                                </GroupBox>

                                <GroupBox Margin="10"
                                          HorizontalAlignment="Left"
                                          Header="{wpf:Gettext TestEquipmentView|Calibration}"
                                          Style="{DynamicResource EqualSizedGroupBoxStyle}">
                                    <Grid Margin="10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <TextBlock Grid.Column="0" Grid.Row="0"
                                                   Text="{wpf:Gettext TestEquipmentView|Last calibration}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                        <DatePicker x:Name="LastCalibrationDatePicker"
                                                    Grid.Column="1"
                                                    Grid.Row="0"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left"
                                                    SelectedDate="{Binding SelectedTestEquipment.LastCalibration, UpdateSourceTrigger=PropertyChanged}"
                                                    Width="170" 
                                                    AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_LastCalibration">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedDatePickerOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.LastCalibration}"/>
                                            </i:Interaction.Behaviors>
                                        </DatePicker>

                                        <TextBlock Grid.Column="0" Grid.Row="1"
                                                   Text="{wpf:Gettext TestEquipmentView|Calibration interval}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                        <DockPanel Grid.Column="1" Grid.Row="1">
                                            <syncfusion:UpDown ZeroColor="{DynamicResource ForegroundBrush}"
                                                               Margin="0,0,10,0"
                                                               NumberDecimalDigits="0"
                                                               VerticalAlignment="Center"
                                                               HorizontalAlignment ="Left"
                                                               Width="50"
                                                               MinValue="1"
                                                               Step="1"
                                                               MaxValue="900"
                                                               Value="{Binding SelectedTestEquipment.CalibrationInterval}"
                                                               AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_CalibrationInterval">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedUpDownOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.CalibrationInterval}"/>
                                                </i:Interaction.Behaviors>
                                            </syncfusion:UpDown>
                                            <TextBlock Text="{wpf:Gettext TestEquipmentView|Days}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"
                                                       HorizontalAlignment ="Left"/>

                                        </DockPanel>

                                        <TextBlock Grid.Column="0" Grid.Row="2"
                                                   Text="{wpf:Gettext TestEquipmentView|Next calibration}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"  />
                                        <TextBox Grid.Column="1" Grid.Row="2" IsEnabled="False"
                                                 Text="{Binding SelectedTestEquipment.NextCalibration, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, StringFormat=dd/MM/yyyy}"
                                                 Width="170"
                                                 styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBox}}"
                                                 styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBoxStyle}" 
                                                 AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_NextCalibration"/>

                                        <TextBlock Grid.Column="0" Grid.Row="3"
                                                   Text="{wpf:Gettext TestEquipmentView|Calibration norm}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                        <TextBox Grid.Column="1" Grid.Row="3"
                                                 Text="{Binding SelectedTestEquipment.CalibrationNorm, UpdateSourceTrigger=PropertyChanged}"
                                                 MaxLength="30"
                                                 styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBox}}"
                                                 styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBoxStyle}" 
                                                 AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_Calibration">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedFromComparisonTextBoxBehavior ClearShownChangesParent="{Binding}"  CompareTo="{Binding SelectedTestEquipmentWithoutChanges.CalibrationNorm}"/>
                                            </i:Interaction.Behaviors>
                                        </TextBox>

                                    </Grid>
                                </GroupBox>

                                <GroupBox Margin="10"
                                          HorizontalAlignment="Left"
                                          Header="{wpf:Gettext TestEquipmentView|Additional settings}"
                                          Style="{DynamicResource EqualSizedGroupBoxStyle}"
                                          Visibility="{Binding IsAdditionalSettingVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <Grid Margin="10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <TextBlock Grid.Column="0" Grid.Row="0"
                                                   Text="{wpf:Gettext TestEquipmentView|Capacity minimum}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                        <StackPanel Grid.Column="1"
                                                        Grid.Row="0"
                                                        Orientation="Horizontal"
                                                        VerticalAlignment="Center">
                                            <syncfusion:DoubleTextBox Width="70"
                                                                          Value="{Binding SelectedTestEquipment.CapacityMin, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                                                          styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type syncfusion:DoubleTextBox}}"
                                                                          ToolTipService.ShowOnDisabled="True"
                                                                          MinValue="0" MaxValue="1000"
                                                                          AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_MinCapacity">
                                                <styles:DynamicContainerStyle.DerivedStyle>
                                                    <Style TargetType="syncfusion:DoubleTextBox">
                                                        <Style.Triggers>
                                                            <Trigger Property="Validation.HasError" Value="true">
                                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </styles:DynamicContainerStyle.DerivedStyle>
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedFromComparisonDoubleTextBoxBehavior ClearShownChangesParent="{Binding}"  CompareTo="{Binding SelectedTestEquipmentWithoutChanges.CapacityMin}"/>
                                                </i:Interaction.Behaviors>
                                            </syncfusion:DoubleTextBox>
                                            <TextBlock Text="{wpf:Gettext Unit|Nm}"
                                                           Margin="5,0"
                                                           VerticalAlignment="Center"/>
                                        </StackPanel>

                                        <TextBlock Grid.Column="0" Grid.Row="1"
                                                   Text="{wpf:Gettext TestEquipmentView|Capacity maximum}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                        <StackPanel Grid.Column="1"
                                                    Grid.Row="1"
                                                    Orientation="Horizontal"
                                                    VerticalAlignment="Center">
                                            <syncfusion:DoubleTextBox Width="70"
                                                                      Value="{Binding SelectedTestEquipment.CapacityMax, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                                                      styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type syncfusion:DoubleTextBox}}"
                                                                      ToolTipService.ShowOnDisabled="True"
                                                                      MinValue="0" MaxValue="9999"
                                                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_MaxCapacity">
                                                <styles:DynamicContainerStyle.DerivedStyle>
                                                    <Style TargetType="syncfusion:DoubleTextBox">
                                                        <Style.Triggers>
                                                            <Trigger Property="Validation.HasError" Value="true">
                                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </styles:DynamicContainerStyle.DerivedStyle>
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedFromComparisonDoubleTextBoxBehavior ClearShownChangesParent="{Binding}"  CompareTo="{Binding SelectedTestEquipmentWithoutChanges.CapacityMax}"/>
                                                </i:Interaction.Behaviors>
                                            </syncfusion:DoubleTextBox>
                                            <TextBlock Text="{wpf:Gettext Unit|Nm}"
                                                       Margin="5,0"
                                                       VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Grid>
                                </GroupBox>

                                <GroupBox Margin="10"
                                          HorizontalAlignment="Left"
                                          Header="{wpf:Gettext TestEquipmentView|Use for}"
                                          Style="{DynamicResource EqualSizedGroupBoxStyle}"
                                          Visibility="{Binding SelectedTestEquipment.UseForVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <Grid Margin="10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <TextBlock Grid.Column="0" Grid.Row="0"
                                                   Text="{wpf:Gettext TestEquipmentView|Use for process}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"
                                                   Visibility="{Binding SelectedTestEquipment.UseForCtlVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                        <CheckBox Grid.Column="1" Grid.Row="0"
                                                  Width="20"
                                                  VerticalAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  IsChecked="{Binding SelectedTestEquipment.UseForCtl}" Margin="0,5,0,0"
                                                  Visibility="{Binding SelectedTestEquipment.UseForCtlVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                                  AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_UseForProcess">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.UseForCtl}"/>
                                            </i:Interaction.Behaviors>
                                        </CheckBox>

                                        <TextBlock Grid.Column="0" Grid.Row="1"
                                                   Text="{wpf:Gettext TestEquipmentView|Use for rotating}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"
                                                   Visibility="{Binding SelectedTestEquipment.UseForRotVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                        <CheckBox Grid.Column="1" Grid.Row="1"
                                                  Width="20"
                                                  VerticalAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  IsChecked="{Binding SelectedTestEquipment.UseForRot}" Margin="0,5,0,0"
                                                  Visibility="{Binding SelectedTestEquipment.UseForRotVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                                  AutomationProperties.AutomationId="AI_TeView_TestEquipmentTab_UseForRotating">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.UseForRot}"/>
                                            </i:Interaction.Behaviors>
                                        </CheckBox>
                                    </Grid>
                                </GroupBox>
                            </WrapPanel>
                        </ScrollViewer>
                    </TabItem>

                    <TabItem Header="{wpf:Gettext TestEquipmentView|Features}"
                             Visibility="{Binding SelectedTestEquipment.FeaturesVisible, 
                             Converter={StaticResource BoolToVisibilityConverter}}" 
                             AutomationProperties.AutomationId="AI_TeView_TestEquipmentFeaturesTab">
                        <ScrollViewer Margin="0,10,10,10"
                                      VerticalScrollBarVisibility="Auto"
                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentFeaturesTab_ScrollViewer">
                            <WrapPanel Grid.IsSharedSizeScope="True">

                                <GroupBox Visibility="{Binding SelectedTestEquipment.TransferOfVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                          Margin="10"
                                          HorizontalAlignment="Left"
                                          Header="{wpf:Gettext TestEquipmentView|Transfer of}"
                                          Style="{DynamicResource EqualSizedGroupBoxStyle}">
                                    <StackPanel Margin="10">

                                        <DockPanel Height="35" Visibility="{Binding SelectedTestEquipment.TransferUserVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|User}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" 
                                                       HorizontalAlignment="Left" Margin="8,0,0,0" />
                                            <CheckBox
                                                      Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipment.TransferUser}"
                                                      AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_TransferUser">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.TransferUser}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                            <controls:ThemeImage 
                                                          Source="pack://application:,,,/Resources;component/Icons/information_2.png"
                                                          Width="20"
                                                          Height="20"
                                                          HorizontalAlignment="Left"
                                                          ToolTip="{wpf:Gettext TestEquipmentView|TransferUserToolTip}"
                                                          Margin="10,0,0,0"
                                                          Opacity="0.5"
                                                          AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_TransferUserTT"/>
                                        </DockPanel>

                                        <DockPanel Height="35"  Visibility="{Binding SelectedTestEquipment.TransferAdapterVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <TextBlock Width="250"
                                                   Text="{wpf:Gettext TestEquipmentView|Adapter}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" 
                                                   HorizontalAlignment="Left" Margin="8,0,0,0"/>
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipment.TransferAdapter}"
                                                      AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_TransferAdapter">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.TransferAdapter}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                            <controls:ThemeImage 
                                                Source="pack://application:,,,/Resources;component/Icons/information_2.png"
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                ToolTip="{wpf:Gettext TestEquipmentView|TransferAdapterToolTip}"
                                                Margin="10,0,0,0"
                                                Opacity="0.5"
                                                AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_TransferAdapterTT"/>
                                        </DockPanel>
                                        <DockPanel Height="35"  Visibility="{Binding SelectedTestEquipment.TransferTransducerVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <TextBlock Width="250"
                                                   Text="{wpf:Gettext TestEquipmentView|Transducer}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" HorizontalAlignment="Left" Margin="8,0,0,0" />
                                        <CheckBox Width="20"
                                                  VerticalAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  IsChecked="{Binding SelectedTestEquipment.TransferTransducer}"
                                                  AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_TransferTransducer">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.TransferTransducer}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                            <controls:ThemeImage 
                                                Source="pack://application:,,,/Resources;component/Icons/information_2.png"
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                ToolTip="{wpf:Gettext TestEquipmentView|TransferTransducerToolTip}"
                                                Margin="10,0,0,0"
                                                Opacity="0.5"
                                                AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_TransferTransducerTT"/>
                                        </DockPanel>

                                        <DockPanel Height="35" Visibility="{Binding SelectedTestEquipment.TransferAttributesVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <TextBlock Width="250"
                                                   Text="{wpf:Gettext TestEquipmentView|Attributes}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" HorizontalAlignment="Left" Margin="8,0,0,0" />
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipment.TransferAttributes}"
                                                      AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_TransferAttributes">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.TransferAttributes}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                            <controls:ThemeImage 
                                                Source="pack://application:,,,/Resources;component/Icons/information_2.png"
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                ToolTip="{wpf:Gettext TestEquipmentView|TransferAttributesToolTip}"
                                                Margin="10,0,0,0"
                                                Opacity="0.5"
                                                AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_TransferAttributesTT"/>
                                        </DockPanel>

                                        <DockPanel Height="35"  Visibility="{Binding SelectedTestEquipment.TransferLocationPicturesVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <TextBlock Width="250"
                                                   Text="{wpf:Gettext TestEquipmentView|Location pictures}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" HorizontalAlignment="Left" Margin="8,0,0,0" />
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipment.TransferLocationPictures}"
                                                      AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_TransferPictures">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.TransferLocationPictures}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                            <controls:ThemeImage 
                                                Source="pack://application:,,,/Resources;component/Icons/information_2.png"
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                ToolTip="{wpf:Gettext TestEquipmentView|TransferLocationPicturesToolTip}"
                                                Margin="10,0,0,0"
                                                Opacity="0.5"
                                                AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_TransferPicturesTT"/>
                                        </DockPanel>

                                        <DockPanel Height="35"  Visibility="{Binding SelectedTestEquipment.TransferNewLimitsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <TextBlock Width="250"
                                                   Text="{wpf:Gettext TestEquipmentView|Additional limits}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" HorizontalAlignment="Left" Margin="8,0,0,0" />
                                            <CheckBox
                                                      Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipment.TransferNewLimits}"
                                                      AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_TransferNewLimits">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.TransferNewLimits}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                            <controls:ThemeImage 
                                                Source="pack://application:,,,/Resources;component/Icons/information_2.png"
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                ToolTip="{wpf:Gettext TestEquipmentView|TransferNewLimitsToolTip}"
                                                Margin="10,0,0,0"
                                                Opacity="0.5"
                                                AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_TransferNewLimitsTT"/>
                                        </DockPanel>

                                        <DockPanel Height="35"  Visibility="{Binding SelectedTestEquipment.TransferCurvesVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <TextBlock Width="250"
                                                   Text="{wpf:Gettext TestEquipmentView|Curves}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" HorizontalAlignment="Left" Margin="8,0,0,0" />
                                            <ComboBox Width="200"
                                                      SelectedItem="{Binding SelectedTestEquipment.TransferCurves}"
                                                      styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type ComboBox}}"
                                                      styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterComboBoxStyle}"
                                                      AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_TransferCurves">

                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedComboBoxOnComparisonBehavior ClearShownChangesParent="{Binding}" CompareValue="{Binding SelectedTestEquipmentWithoutChanges.TransferCurves}"/>
                                                </i:Interaction.Behaviors>
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}">
                                                            <styles:DynamicContainerStyle.DerivedStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding}" Value="Never">
                                                                            <Setter Property="Text" Value="{wpf:Gettext TestEquipmentView|TransferCurves Never}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding}" Value="OnlyNio">
                                                                            <Setter Property="Text" Value="{wpf:Gettext TestEquipmentView|TransferCurves OnlyNio}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding}" Value="Always">
                                                                            <Setter Property="Text" Value="{wpf:Gettext TestEquipmentView|TransferCurves Always}"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </styles:DynamicContainerStyle.DerivedStyle>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                                <enums:TestEquipmentBehaviourTransferCurves>Never</enums:TestEquipmentBehaviourTransferCurves>
                                                <enums:TestEquipmentBehaviourTransferCurves>OnlyNio</enums:TestEquipmentBehaviourTransferCurves>
                                                <enums:TestEquipmentBehaviourTransferCurves>Always</enums:TestEquipmentBehaviourTransferCurves>
                                            </ComboBox>
                                            <controls:ThemeImage 
                                                Source="pack://application:,,,/Resources;component/Icons/information_2.png"
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                ToolTip="{wpf:Gettext TestEquipmentView|TransferCurvesToolTip}"
                                                Margin="10,0,0,0"
                                                Opacity="0.5"
                                                AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_TransferCurvesTT"/>
                                        </DockPanel>
                                    </StackPanel>
                                </GroupBox>

                                <GroupBox Visibility="{Binding SelectedTestEquipment.TestBehaviorVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                          Margin="10"
                                          HorizontalAlignment="Left"
                                          Header="{wpf:Gettext TestEquipmentView|Test behavior}"
                                          Style="{DynamicResource EqualSizedGroupBoxStyle}">
                                    <StackPanel Margin="10">

                                        <DockPanel Height="35"  Visibility="{Binding SelectedTestEquipment.AskForIdentVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|Ask for ident}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" HorizontalAlignment="Left" Margin="8,0,0,0" />
                                            <ComboBox Width="200"
                                                      SelectedItem="{Binding SelectedTestEquipment.AskForIdent}"
                                                      styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type ComboBox}}"
                                                      styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterComboBoxStyle}"
                                                      AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_AskForIdent">

                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedComboBoxOnComparisonBehavior ClearShownChangesParent="{Binding}" CompareValue="{Binding SelectedTestEquipmentWithoutChanges.AskForIdent}"/>
                                                </i:Interaction.Behaviors>
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}">
                                                            <styles:DynamicContainerStyle.DerivedStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding}" Value="Never">
                                                                            <Setter Property="Text" Value="{wpf:Gettext TestEquipmentView|AskForIdent Never}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding}" Value="PerTest">
                                                                            <Setter Property="Text" Value="{wpf:Gettext TestEquipmentView|AskForIdent PerTest}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding}" Value="PerVal">
                                                                            <Setter Property="Text" Value="{wpf:Gettext TestEquipmentView|AskForIdent PerVal}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding}" Value="OnlyNio">
                                                                            <Setter Property="Text" Value="{wpf:Gettext TestEquipmentView|AskForIdent OnlyNio}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding}" Value="PerRoute">
                                                                            <Setter Property="Text" Value="{wpf:Gettext TestEquipmentView|AskForIdent PerRoute}"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </styles:DynamicContainerStyle.DerivedStyle>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                                <enums:TestEquipmentBehaviourAskForIdent>Never</enums:TestEquipmentBehaviourAskForIdent>
                                                <enums:TestEquipmentBehaviourAskForIdent>PerTest</enums:TestEquipmentBehaviourAskForIdent>
                                                <enums:TestEquipmentBehaviourAskForIdent>PerVal</enums:TestEquipmentBehaviourAskForIdent>
                                                <enums:TestEquipmentBehaviourAskForIdent>OnlyNio</enums:TestEquipmentBehaviourAskForIdent>
                                                <enums:TestEquipmentBehaviourAskForIdent>PerRoute</enums:TestEquipmentBehaviourAskForIdent>
                                            </ComboBox>
                                            <controls:ThemeImage 
                                                Source="pack://application:,,,/Resources;component/Icons/information_2.png"
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                ToolTip="{wpf:Gettext TestEquipmentView|AskForIdentToolTip}"
                                                Margin="10,0,0,0"
                                                Opacity="0.5"
                                                AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_AskForIdentTT"/>
                                        </DockPanel>

                                        <DockPanel Height="35"  Visibility="{Binding SelectedTestEquipment.AskForSignVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|Ask for sign}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" HorizontalAlignment="Left" Margin="8,0,0,0" />
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipment.AskForSign}"
                                                      AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_AskForSign">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.AskForSign}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                            <controls:ThemeImage 
                                                Source="pack://application:,,,/Resources;component/Icons/information_2.png"
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                ToolTip="{wpf:Gettext TestEquipmentView|AskForSignToolTip}"
                                                Margin="10,0,0,0"
                                                Opacity="0.5"
                                                AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_AskForSignTT"/>
                                        </DockPanel>

                                        <DockPanel Height="35"  Visibility="{Binding SelectedTestEquipment.UseErrorCodesVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|Use error codes}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" HorizontalAlignment="Left" Margin="8,0,0,0" />
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipment.UseErrorCodes}"
                                                      AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_UseErrorCodes">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.UseErrorCodes}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                            <controls:ThemeImage 
                                                Source="pack://application:,,,/Resources;component/Icons/information_2.png"
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                ToolTip="{wpf:Gettext TestEquipmentView|UseErrorCodesToolTip}"
                                                Margin="10,0,0,0"
                                                Opacity="0.5"
                                                AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_UseErrorCodesTT"/>
                                        </DockPanel>

                                        <DockPanel Height="35"  Visibility="{Binding SelectedTestEquipment.DoLoseCheckVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|Do lose check}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" HorizontalAlignment="Left" Margin="8,0,0,0" />
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipment.DoLoseCheck}"
                                                      AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_PerformLooseCheck">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.DoLoseCheck}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                            <controls:ThemeImage 
                                                Source="pack://application:,,,/Resources;component/Icons/information_2.png"
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                ToolTip="{wpf:Gettext TestEquipmentView|DoLoseCheckToolTip}"
                                                Margin="10,0,0,0"
                                                Opacity="0.5"
                                                AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_PerformLooseCheckTT"/>
                                        </DockPanel>

                                        <DockPanel Height="35" Visibility="{Binding SelectedTestEquipment.CanDeleteMeasurementsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|Can delete measurements}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" HorizontalAlignment="Left" Margin="8,0,0,0" />
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipment.CanDeleteMeasurements}"
                                                      AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_MpCanBeDeleted">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.CanDeleteMeasurements}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                            <controls:ThemeImage 
                                                Source="pack://application:,,,/Resources;component/Icons/information_2.png"
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                ToolTip="{wpf:Gettext TestEquipmentView|CanDeleteMeasurementsToolTip}"
                                                Margin="10,0,0,0"
                                                Opacity="0.5"
                                                AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_MpCanBeDeletedTT"/>
                                        </DockPanel>

                                        <DockPanel Height="35"  Visibility="{Binding SelectedTestEquipment.ConfirmMeasurementsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|Confirm measurements}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" HorizontalAlignment="Left" Margin="8,0,0,0" />
                                            <ComboBox Width="200"
                                                      SelectedItem="{Binding SelectedTestEquipment.ConfirmMeasurements}"
                                                      styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type ComboBox}}"
                                                      styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterComboBoxStyle}"
                                                      AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_ConfirmMp">

                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedComboBoxOnComparisonBehavior ClearShownChangesParent="{Binding}" CompareValue="{Binding SelectedTestEquipmentWithoutChanges.ConfirmMeasurements}"/>
                                                </i:Interaction.Behaviors>
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}">
                                                            <styles:DynamicContainerStyle.DerivedStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding}" Value="Never">
                                                                            <Setter Property="Text" Value="{wpf:Gettext TestEquipmentView|ConfirmMeasurements Never}"/>
                                                                        </DataTrigger>
                 
                                                                        <DataTrigger Binding="{Binding}" Value="OnlyNio">
                                                                            <Setter Property="Text" Value="{wpf:Gettext TestEquipmentView|ConfirmMeasurements OnlyNio}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding}" Value="Always">
                                                                            <Setter Property="Text" Value="{wpf:Gettext TestEquipmentView|ConfirmMeasurements Always}"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </styles:DynamicContainerStyle.DerivedStyle>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                                <enums:TestEquipmentBehaviourConfirmMeasurements>Never</enums:TestEquipmentBehaviourConfirmMeasurements>
                                                <enums:TestEquipmentBehaviourConfirmMeasurements>OnlyNio</enums:TestEquipmentBehaviourConfirmMeasurements>
                                                <enums:TestEquipmentBehaviourConfirmMeasurements>Always</enums:TestEquipmentBehaviourConfirmMeasurements>
                                            </ComboBox>
                                            <controls:ThemeImage 
                                                Source="pack://application:,,,/Resources;component/Icons/information_2.png"
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                ToolTip="{wpf:Gettext TestEquipmentView|ConfirmMeasurementsToolTip}"
                                                Margin="10,0,0,0"
                                                Opacity="0.5"
                                                AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_ConfirmMpTT"/>
                                        </DockPanel>
                                        <DockPanel Height="35" Visibility="{Binding SelectedTestEquipment.CanUseQstStandardVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|Can use qst standard methods}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" HorizontalAlignment="Left" Margin="8,0,0,0" />
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipment.CanUseQstStandard}"
                                                      AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_StandardMethodesCanBeUsed">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentWithoutChanges.CanUseQstStandard}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                            <controls:ThemeImage 
                                                Source="pack://application:,,,/Resources;component/Icons/information_2.png"
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                ToolTip="{wpf:Gettext TestEquipmentView|CanUseQstStandardToolTip}"
                                                Margin="10,0,0,0"
                                                Opacity="0.5"
                                                AutomationProperties.AutomationId="AI_TeView_TeFeaturesTab_StandardMethodesCanBeUsedTT"/>
                                        </DockPanel>
                                    </StackPanel>
                                </GroupBox>

                            </WrapPanel>
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
                <TabControl Grid.Column="0" Visibility="{Binding IsTestEquipmentModelVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TabItem Header="{wpf:Gettext TestEquipmentView|Test equipment model}" AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab">
                        <ScrollViewer Margin="0,10,10,10"
                                      VerticalScrollBarVisibility="Auto"
                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_ScrollViewer">
                            <WrapPanel Grid.IsSharedSizeScope="True">

                                <GroupBox Margin="10"
                                          HorizontalAlignment="Left"
                                          Header="{wpf:Gettext TestEquipmentView|Configuration}"
                                          Style="{DynamicResource EqualSizedGroupBoxStyle}"
                                          IsEnabled="{Binding IsTestEquipmentModelEnabled}">
                                    <Grid Margin="10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />

                                        </Grid.RowDefinitions>

                                        <TextBlock Grid.Column="0" Grid.Row="0"
                                                   Text="{wpf:Gettext TestEquipmentView|Name}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" />
                                        <TextBox Grid.Column="1" Grid.Row="0"
                                                 Text="{Binding SelectedTestEquipmentModel.TestEquipmentModelName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                                 MaxLength="20"
                                                 styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBox}}"
                                                 styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBoxStyle}"
                                                 AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_Name">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedFromComparisonTextBoxBehavior ClearShownChangesParent="{Binding}"  CompareTo="{Binding SelectedTestEquipmentModelWithoutChanges.TestEquipmentModelName}"/>
                                            </i:Interaction.Behaviors>
                                        </TextBox>

                                        <TextBlock Grid.Column="0" Grid.Row="1"
                                                   Text="{wpf:Gettext TestEquipmentView|DataGate Version}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" />
                                        <ComboBox Grid.Column="1"
                                                  Grid.Row="1"
                                                  ItemsSource="{Binding DataGateVersions}"
                                                  DisplayMemberPath="DataGateVersionsString"
                                                  SelectedItem="{Binding SelectedTestEquipmentModel.DataGateVersion}"
                                                  styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type ComboBox}}"
                                                  styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterComboBoxStyle}"
                                                  AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_DataGateVersion">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedComboBoxOnComparisonBehavior ClearShownChangesParent="{Binding}" CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.DataGateVersion}"/>
                                            </i:Interaction.Behaviors>
                                        </ComboBox>

                                        <TextBlock Grid.Column="0" Grid.Row="2"
                                                   Text="{wpf:Gettext TestEquipmentView|Use for process}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                        <CheckBox Grid.Column="1" Grid.Row="2"
                                                  Width="20"
                                                  VerticalAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  IsChecked="{Binding SelectedTestEquipmentModel.UseForCtl}" Margin="0,5,0,0"
                                                  AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_UseForProcess">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.UseForCtl}"/>
                                            </i:Interaction.Behaviors>
                                        </CheckBox>

                                        <TextBlock Grid.Column="0" Grid.Row="3"
                                                   Text="{wpf:Gettext TestEquipmentView|Use for rotating}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" />
                                        <CheckBox Grid.Column="1" Grid.Row="3"
                                                  Width="20"
                                                  VerticalAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  IsChecked="{Binding SelectedTestEquipmentModel.UseForRot}" Margin="0,5,0,0"
                                                  AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_UseForRotating">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.UseForRot}"/>
                                            </i:Interaction.Behaviors>
                                        </CheckBox>
                                    </Grid>
                                </GroupBox>

                                <GroupBox Margin="10" Width="360"
                                          HorizontalAlignment="Left"
                                          Header="{wpf:Gettext TestEquipmentView|Transfer of}"
                                          Style="{DynamicResource EqualSizedGroupBoxStyle}"
                                          Visibility="{Binding ShowTransferAttributes, Converter={StaticResource BoolToVisibilityConverter}}"
                                          IsEnabled="{Binding IsTestEquipmentModelEnabled}">
                                    <StackPanel Margin="10">

                                        <DockPanel Height="35">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|User}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                            <CheckBox
                                                      Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipmentModel.TransferUser}"
                                                AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_TransferUser">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.TransferUser}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </DockPanel>

                                        <DockPanel Height="35">
                                            <TextBlock Width="250"
                                                   Text="{wpf:Gettext TestEquipmentView|Adapter}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipmentModel.TransferAdapter}"
                                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_TransferAdapter">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.TransferAdapter}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </DockPanel>
                                        <DockPanel Height="35">
                                            <TextBlock Width="250"
                                                   Text="{wpf:Gettext TestEquipmentView|Transducer}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                            <CheckBox Width="20"
                                                  VerticalAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  IsChecked="{Binding SelectedTestEquipmentModel.TransferTransducer}"
                                                  AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_TransferTransducer">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.TransferTransducer}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </DockPanel>

                                        <DockPanel Height="35">
                                            <TextBlock Width="250"
                                                   Text="{wpf:Gettext TestEquipmentView|Attributes}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" />
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipmentModel.TransferAttributes}"
                                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_TransferAttributes">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.TransferAttributes}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </DockPanel>

                                        <DockPanel Height="35">
                                            <TextBlock Width="250"
                                                   Text="{wpf:Gettext TestEquipmentView|Location pictures}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipmentModel.TransferLocationPictures}"
                                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_TransferPictures">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.TransferLocationPictures}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </DockPanel>

                                        <DockPanel Height="35">
                                            <TextBlock Width="250"
                                                   Text="{wpf:Gettext TestEquipmentView|Additional limits}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                            <CheckBox
                                                      Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipmentModel.TransferNewLimits}"
                                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_TransferNewLimits">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.TransferNewLimits}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </DockPanel>

                                        <DockPanel Height="35">
                                            <TextBlock Width="250"
                                                   Text="{wpf:Gettext TestEquipmentView|Curves}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipmentModel.TransferCurves}"
                                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_TransferCurves">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.TransferCurves}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </DockPanel>
                                    </StackPanel>
                                </GroupBox>

                                <GroupBox Margin="10" Width="360"
                                          HorizontalAlignment="Left"
                                          Header="{wpf:Gettext TestEquipmentView|Test behavior}"
                                          Style="{DynamicResource EqualSizedGroupBoxStyle}"
                                          Visibility="{Binding ShowTestBehavior, Converter={StaticResource BoolToVisibilityConverter}}"
                                          IsEnabled="{Binding IsTestEquipmentModelEnabled}">
                                    <StackPanel Margin="10">

                                        <DockPanel Height="35">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|Ask for ident}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipmentModel.AskForIdent}"
                                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_AskForIdent">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.AskForIdent}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </DockPanel>

                                        <DockPanel Height="35">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|Ask for sign}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipmentModel.AskForSign}"
                                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_AskForSign">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.AskForSign}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </DockPanel>

                                        <DockPanel Height="35">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|Use error codes}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipmentModel.UseErrorCodes}"
                                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_UseErrorCodes">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.UseErrorCodes}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </DockPanel>

                                        <DockPanel Height="35">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|Do lose check}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" />
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipmentModel.DoLoseCheck}"
                                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_PerformLooseCheck">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.DoLoseCheck}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </DockPanel>

                                        <DockPanel Height="35">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|Can delete measurements}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}"/>
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipmentModel.CanDeleteMeasurements}"
                                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_MpCanBeDeleted">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.CanDeleteMeasurements}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </DockPanel>

                                        <DockPanel Height="35">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|Confirm measurements}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" />
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipmentModel.ConfirmMeasurements}"
                                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_ConfirmMp">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.ConfirmMeasurements}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </DockPanel>
                                        <DockPanel Height="35">
                                            <TextBlock Width="250"
                                                       Text="{wpf:Gettext TestEquipmentView|Can use Qst standard methods}"
                                                       styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                       styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" />
                                            <CheckBox Width="20"
                                                      VerticalAlignment="Center"
                                                      VerticalContentAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      IsChecked="{Binding SelectedTestEquipmentModel.CanUseQstStandard}"
                                                      AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_StandardMethodesCanBeUsed">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:ShowChangedToggleButtonOnComparisonBehavior CompareValue="{Binding SelectedTestEquipmentModelWithoutChanges.CanUseQstStandard}"/>
                                                </i:Interaction.Behaviors>
                                            </CheckBox>
                                        </DockPanel>
                                    </StackPanel>
                                </GroupBox>

                                <GroupBox Margin="10"
                                          HorizontalAlignment="Left"
                                          Header="{wpf:Gettext TestEquipmentView|File path}"
                                          Style="{DynamicResource EqualSizedGroupBoxStyle}"
                                          IsEnabled="{Binding IsTestEquipmentModelEnabled}">
                                    <Grid Margin="10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <TextBlock Grid.Column="0" Grid.Row="1"
                                                   Text="{wpf:Gettext TestEquipmentView|Test equipment driver}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" />
                                        <TextBox Grid.Column="1" Grid.Row="1"
                                                 Text="{Binding SelectedTestEquipmentModel.DriverProgramPath, UpdateSourceTrigger=PropertyChanged}"
                                                 styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBox}}"
                                                 styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentPathTextBoxStyle}"
                                                 AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_TeDriver">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedFromComparisonTextBoxBehavior ClearShownChangesParent="{Binding}"  CompareTo="{Binding SelectedTestEquipmentModelWithoutChanges.DriverProgramPath}"/>
                                            </i:Interaction.Behaviors>
                                        </TextBox>

                                        <Button Grid.Column="2" Grid.Row="1"
                                                    Width="20"
                                                    Height="20"
                                                    VerticalContentAlignment="Top"
                                                    Style="{DynamicResource TransparentButtonStyle}"
                                                    Command="{Binding SelectDriverPathCommand}"
                                                    AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_TeDriverExplorerBtn">
                                            <StackPanel>
                                                <controls:ThemeImage Source="pack://application:,,,/Resources;component/Icons/folder.png"
                                                                         Height="20" 
                                                                         Margin="0,0,0,2"/>
                                                <TextBlock Text="{wpf:Gettext TestEquipmentView Ribbon|Add}"
                                                               FontSize="10"
                                                               TextAlignment="Center" 
                                                               TextWrapping="WrapWithOverflow"/>
                                            </StackPanel>
                                        </Button>

                                        <TextBlock Grid.Column="0" Grid.Row="2"
                                                   Text="{wpf:Gettext TestEquipmentView|Status file}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" />
                                        <TextBox Grid.Column="1" Grid.Row="2"
                                                 Text="{Binding SelectedTestEquipmentModel.StatusFilePath, UpdateSourceTrigger=PropertyChanged}"
                                                 styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBox}}"
                                                 styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentPathTextBoxStyle}"
                                                 AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_StatusFile">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedFromComparisonTextBoxBehavior ClearShownChangesParent="{Binding}"  CompareTo="{Binding SelectedTestEquipmentModelWithoutChanges.StatusFilePath}"/>
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <Button Grid.Column="2" Grid.Row="2"
                                                Width="20"
                                                Height="20"
                                                VerticalContentAlignment="Top"
                                                Style="{DynamicResource TransparentButtonStyle}"
                                                Command="{Binding SelectStatusPathCommand}"
                                                AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_StatusFileExplorerBtn">
                                            <StackPanel>
                                                <controls:ThemeImage Source="pack://application:,,,/Resources;component/Icons/folder.png"
                                                                     Height="20" 
                                                                     Margin="0,0,0,2"/>
                                                <TextBlock Text="{wpf:Gettext TestEquipmentView Ribbon|Add}"
                                                           FontSize="10"
                                                           TextAlignment="Center" 
                                                           TextWrapping="WrapWithOverflow"/>
                                            </StackPanel>
                                        </Button>


                                        <TextBlock Grid.Column="0" Grid.Row="3"
                                                   Text="{wpf:Gettext TestEquipmentView|Qst to test equipment file}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" />
                                        <TextBox Grid.Column="1" Grid.Row="3"
                                                 Text="{Binding SelectedTestEquipmentModel.CommunicationFilePath, UpdateSourceTrigger=PropertyChanged}"
                                                 styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBox}}"
                                                 styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentPathTextBoxStyle}"
                                                 AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_QstToTeFile">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedFromComparisonTextBoxBehavior ClearShownChangesParent="{Binding}"  CompareTo="{Binding SelectedTestEquipmentModelWithoutChanges.CommunicationFilePath}"/>
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <Button Grid.Column="2" Grid.Row="3"
                                                Width="20"
                                                Height="20"
                                                VerticalContentAlignment="Top"
                                                Style="{DynamicResource TransparentButtonStyle}"
                                                Command="{Binding SelectCommunicationPathCommand}"
                                                AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_QstToTeFileExplorerBtn">
                                            <StackPanel>
                                                <controls:ThemeImage Source="pack://application:,,,/Resources;component/Icons/folder.png"
                                                                     Height="20" 
                                                                     Margin="0,0,0,2"/>
                                                <TextBlock Text="{wpf:Gettext TestEquipmentView Ribbon|Add}"
                                                           FontSize="10"
                                                           TextAlignment="Center" 
                                                           TextWrapping="WrapWithOverflow"/>
                                            </StackPanel>
                                        </Button>

                                        <TextBlock Grid.Column="0" Grid.Row="4"
                                                   Text="{wpf:Gettext TestEquipmentView|Test equipment to qst file}"
                                                   styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBlock}}"
                                                   styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentParameterTextBlockStyle}" />
                                        <TextBox Grid.Column="1" Grid.Row="4"
                                                 Text="{Binding SelectedTestEquipmentModel.ResultFilePath, UpdateSourceTrigger=PropertyChanged}"
                                                 styles:DynamicContainerStyle.BaseStyle="{DynamicResource {x:Type TextBox}}"
                                                 styles:DynamicContainerStyle.DerivedStyle="{DynamicResource TestEquipmentPathTextBoxStyle}"
                                                 AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_TeToQstFile">
                                            <i:Interaction.Behaviors>
                                                <behaviors:ShowChangedFromComparisonTextBoxBehavior ClearShownChangesParent="{Binding}"  CompareTo="{Binding SelectedTestEquipmentModelWithoutChanges.ResultFilePath}"/>
                                            </i:Interaction.Behaviors>
                                        </TextBox>
                                        <Button Grid.Column="2" Grid.Row="4"
                                                Width="20"
                                                Height="20"
                                                VerticalContentAlignment="Top"
                                                Style="{DynamicResource TransparentButtonStyle}"
                                                Command="{Binding SelectResultPathCommand}"
                                                AutomationProperties.AutomationId="AI_TeView_TestEquipmentModelTab_TeToQstFileExplorerBtn">
                                            <StackPanel>
                                                <controls:ThemeImage Source="pack://application:,,,/Resources;component/Icons/folder.png"
                                                                     Height="20" 
                                                                     Margin="0,0,0,2"/>
                                                <TextBlock Text="{wpf:Gettext TestEquipmentView Ribbon|Add}"
                                                           FontSize="10"
                                                           TextAlignment="Center" 
                                                           TextWrapping="WrapWithOverflow"/>
                                            </StackPanel>
                                        </Button>
                                    </Grid>
                                </GroupBox>
                            </WrapPanel>
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
            </Grid>
        </Grid>
    </DockPanel>
</UserControl>
